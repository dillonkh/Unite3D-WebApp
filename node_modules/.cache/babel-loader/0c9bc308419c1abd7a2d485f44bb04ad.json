{"ast":null,"code":"var _jsxFileName = \"/Users/dillonharris/code/3DPrinterSharing-Web/src/components/ModalJobDetails.js\";\nimport React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport UButton from './utilities/UButton';\nimport { AiOutlineRightCircle, AiOutlineLeftCircle } from 'react-icons/ai';\nimport '../style/Modal.css';\nexport default class ModalJobDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.gatherJsx = () => {\n      let myJsx = [];\n      let details = 'The inspriation for this model comes from a classic video game that I loved to play' + \" I don't have lots of money so the whoever can give me the best bid gets it! I'm also open to changing\" + \" my filaments and fill percentage. I don't know a lot about 3D printing so whatever you think is best\" + \" sounds good to me so long as my model doesn't break while shipping\";\n      let dimensions = `DIM: ${this.props.model.printDimensionX} x ${this.props.model.printDimensionY} x ${this.props.model.printDimensionZ} ${this.props.model.dimensionUnit}`;\n      myJsx.push( /*#__PURE__*/React.createElement(\"section\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-general-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      }, this.props.model.title), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"budget\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, \"Budget: $\", this.props.model.budget)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-general-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"jobDetails\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, \"Job Details\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"detailGrid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"subtitle filament\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }\n      }, \"Filament\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filament-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }\n      }, this.props.model.filament), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"subtitle fill-model\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }\n      }, \"Fill\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fill-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }\n      }, this.props.model.fill, \"%\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"subtitle dimension\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }\n      }, \"Dimensions\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dim-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      }, dimensions))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"jobDetails\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, \"Details\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"detailsSection\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }, details))));\n      myJsx.push( /*#__PURE__*/React.createElement(\"section\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"image\",\n        alt: \"\",\n        src: \"https://img2.cgtrader.com/items/2133485/1fde497076/woody-toy-story-fan-art-3d-model-obj-mtl-stl-ztl-zbp.jpg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      })));\n      myJsx.push( /*#__PURE__*/React.createElement(\"section\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"image\",\n        alt: \"\",\n        src: \"https://media.sketchfab.com/models/61d6846beafd42c99dc8779a6e437068/thumbnails/4de11ec9b2d74092b8a9eefb4aa42ecf/2e3b61bd3ed54cb0a59f1c3a5c2613f5.jpeg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      })));\n      this.setState({\n        jsx: myJsx\n      });\n    };\n\n    this.componentDidUpdate = prevProps => {\n      //prevProps is the previous props of the component before being updated\n      //so, if this.props != prevProps it means that component props have been updated\n      if (this.props.show && !prevProps.show) {\n        this.setState({\n          show: this.props.show\n        });\n      }\n    };\n\n    this.componentDidMount = () => {\n      this.gatherJsx(); //make an API call here with the printJobID to get the appropriate job detail data\n    };\n\n    this.decrementJsxIndex = () => {\n      this.setState(prevState => ({\n        jsxIndex: prevState.jsxIndex - 1\n      }));\n    };\n\n    this.incrementJsxIndex = () => {\n      this.setState(prevState => ({\n        jsxIndex: prevState.jsxIndex + 1\n      }));\n    };\n\n    this.props = props;\n    this.state = {\n      show: props.show,\n      printJobID: props.printJobID,\n      jsxIndex: 0,\n      jsx: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: this.props.show,\n      className: \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      onClick: this.props.handleClose,\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, \"Job Details\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"modal-general-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, this.state.jsxIndex !== 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"modal-general-left-right\",\n      onClick: this.decrementJsxIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(AiOutlineLeftCircle, {\n      className: \"modal-general-next-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 33\n      }\n    })), this.state.jsx[this.state.jsxIndex], this.state.jsxIndex !== this.state.jsx.length - 1 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"modal-general-left-right\",\n      onClick: this.incrementJsxIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(AiOutlineRightCircle, {\n      className: \"modal-general-next-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(UButton, {\n      onClick: this.props.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, \"Close\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/dillonharris/code/3DPrinterSharing-Web/src/components/ModalJobDetails.js"],"names":["React","Modal","UButton","AiOutlineRightCircle","AiOutlineLeftCircle","ModalJobDetails","Component","constructor","props","gatherJsx","myJsx","details","dimensions","model","printDimensionX","printDimensionY","printDimensionZ","dimensionUnit","push","title","budget","filament","fill","setState","jsx","componentDidUpdate","prevProps","show","componentDidMount","decrementJsxIndex","prevState","jsxIndex","incrementJsxIndex","state","printJobID","render","handleClose","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport UButton from './utilities/UButton';\nimport {AiOutlineRightCircle, AiOutlineLeftCircle} from 'react-icons/ai';\nimport '../style/Modal.css';\n\nexport default class ModalJobDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props = props;\n        this.state = {\n            show: props.show,\n            printJobID: props.printJobID,\n            jsxIndex: 0,\n            jsx: [],\n        };\n    }\n\n    gatherJsx = () => {\n        let myJsx = [];\n        let details =\n            'The inspriation for this model comes from a classic video game that I loved to play' +\n            \" I don't have lots of money so the whoever can give me the best bid gets it! I'm also open to changing\" +\n            \" my filaments and fill percentage. I don't know a lot about 3D printing so whatever you think is best\" +\n            \" sounds good to me so long as my model doesn't break while shipping\";\n        let dimensions = `DIM: ${this.props.model.printDimensionX} x ${this.props.model.printDimensionY} x ${this.props.model.printDimensionZ} ${this.props.model.dimensionUnit}`;\n        myJsx.push(\n            <section>\n                <div className='modal-general-header'>\n                    <span className='title'>{this.props.model.title}</span>\n                    <span className='budget'>Budget: ${this.props.model.budget}</span>\n                </div>\n                <div className='modal-general-details'>\n                    <h4 className='jobDetails'>Job Details</h4>\n                    <div className='detailGrid'>\n                        <div className='subtitle filament'>Filament</div>\n                        <div className='filament-details'>{this.props.model.filament}</div>\n                        <div className='subtitle fill-model'>Fill</div>\n                        <div className='fill-details'>{this.props.model.fill}%</div>\n                        <div className='subtitle dimension'>Dimensions</div>\n                        <div className='dim-details'>{dimensions}</div>\n                    </div>\n                </div>\n                <div>\n                    <div className='jobDetails'>Details</div>\n                    <p className='detailsSection'>{details}</p>\n                </div>\n            </section>,\n        );\n        myJsx.push(\n            <section>\n                <img\n                    className='image'\n                    alt=''\n                    src='https://img2.cgtrader.com/items/2133485/1fde497076/woody-toy-story-fan-art-3d-model-obj-mtl-stl-ztl-zbp.jpg'\n                />\n            </section>,\n        );\n        myJsx.push(\n            <section>\n                <img\n                    className='image'\n                    alt=''\n                    src='https://media.sketchfab.com/models/61d6846beafd42c99dc8779a6e437068/thumbnails/4de11ec9b2d74092b8a9eefb4aa42ecf/2e3b61bd3ed54cb0a59f1c3a5c2613f5.jpeg'\n                />\n            </section>,\n        );\n        this.setState({jsx: myJsx});\n    };\n\n    componentDidUpdate = (prevProps) => {\n        //prevProps is the previous props of the component before being updated\n        //so, if this.props != prevProps it means that component props have been updated\n        if (this.props.show && !prevProps.show) {\n            this.setState({show: this.props.show});\n        }\n    };\n\n    componentDidMount = () => {\n        this.gatherJsx();\n        //make an API call here with the printJobID to get the appropriate job detail data\n    };\n\n    decrementJsxIndex = () => {\n        this.setState((prevState) => ({\n            jsxIndex: prevState.jsxIndex - 1,\n        }));\n    };\n\n    incrementJsxIndex = () => {\n        this.setState((prevState) => ({\n            jsxIndex: prevState.jsxIndex + 1,\n        }));\n    };\n\n    render() {\n        return (\n            <Modal show={this.props.show} className='modal'>\n                <Modal.Header onClick={this.props.handleClose} closeButton>\n                    <Modal.Title>Job Details</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <section className='modal-general-section'>\n                        {this.state.jsxIndex !== 0 && (\n                            <span className='modal-general-left-right' onClick={this.decrementJsxIndex}>\n                                <AiOutlineLeftCircle className='modal-general-next-buttons' />\n                            </span>\n                        )}\n                        {this.state.jsx[this.state.jsxIndex]}\n                        {this.state.jsxIndex !== this.state.jsx.length - 1 && (\n                            <span className='modal-general-left-right' onClick={this.incrementJsxIndex}>\n                                <AiOutlineRightCircle className='modal-general-next-buttons' />\n                            </span>\n                        )}\n                    </section>\n                </Modal.Body>\n                <Modal.Footer>\n                    <UButton onClick={this.props.handleClose}>Close</UButton>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}