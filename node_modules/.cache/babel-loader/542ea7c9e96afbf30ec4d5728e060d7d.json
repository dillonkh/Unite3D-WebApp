{"ast":null,"code":"var _jsxFileName = \"/Users/dillonharris/code/3DPrinterSharing-Web/src/components/utilities/UDimensionsModal.js\";\nimport React from 'react';\nimport { useState } from 'react'; // NOTE: Modal is throwing a warining ->\n//      \"Warning: findDOMNode is deprecated in StrictMode.\n//      findDOMNode was passed an instance of Transition which is inside StrictMode.\n//      Instead, add a ref directly to the element you want to reference.\n//      Learn more about using refs safely here: https://fb.me/react-strict-mode-find-node\"\n// I've looked into it and it seems that it is an actual issue with the way that Modal is implemented\n// under the hood. They are currently working on fixing it.\n\nimport Modal from 'react-bootstrap/Modal';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport UTextInput from './UTextInput';\nimport UButton from './UButton';\nimport USelectDropdown from './USelectDropdown';\n/**\n * Select Dropdowns will fill the width of their container\n *\n * @required props:\n *  show\n *\n *\n * @optional props:\n *\n */\n\nexport default (props => {\n  const units = ['in', 'mm'];\n  const [show, setShow] = useState(false);\n  const [dimensions, setDimensions] = useState('');\n  const [xDim, setXDim] = useState('');\n  const [yDim, setYDim] = useState('');\n  const [zDim, setZDim] = useState('');\n  const [selectedUnits, setSelectedUnits] = useState('');\n  console.log(props.state);\n\n  let changeSelectedUnits = e => {\n    setSelectedUnits(units[e.target.value - 1]);\n  };\n\n  const handleShow = () => {\n    setShow(true);\n    document.activeElement.blur();\n  };\n\n  const handleClose = () => {\n    setShow(false);\n    changeDimensions();\n  };\n\n  let changeDimensions = () => {\n    if (xDim && yDim && zDim && selectedUnits) {\n      setDimensions(xDim + selectedUnits + ' x ' + yDim + selectedUnits + ' x ' + zDim + selectedUnits);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    show: props.show,\n    onHide: props.onHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Dimensions\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"mx-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(UTextInput, {\n    number: true,\n    placeholder: \"1.5\",\n    className: \"my-0\",\n    value: xDim,\n    onChange: e => {\n      setXDim(e.target.value);\n    },\n    onClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sub-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }, \"x-axis\")))), /*#__PURE__*/React.createElement(Col, {\n    className: \"px-0 vertical-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"horizontal-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, \"X\")), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(UTextInput, {\n    number: true,\n    placeholder: \"2.0\",\n    value: yDim,\n    onChange: e => {\n      setYDim(e.target.value);\n    },\n    onClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    className: \"sub-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sub-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }, \"y-axis\")))), /*#__PURE__*/React.createElement(Col, {\n    className: \"px-0 vertical-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"horizontal-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, \"X\")), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(UTextInput, {\n    number: true,\n    placeholder: \"2.5\",\n    value: zDim,\n    onChange: e => {\n      setZDim(e.target.value);\n    },\n    onClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    className: \"sub-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sub-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  }, \"z-axis\")))), /*#__PURE__*/React.createElement(Col, {\n    lg: '3',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(USelectDropdown, {\n    onChange: e => changeSelectedUnits(e),\n    value: selectedUnits,\n    placeholder: \"Units\",\n    options: units,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(UButton, {\n    onClick: props.handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, \"Set Dimensions\")));\n});","map":{"version":3,"sources":["/Users/dillonharris/code/3DPrinterSharing-Web/src/components/utilities/UDimensionsModal.js"],"names":["React","useState","Modal","Row","Col","UTextInput","UButton","USelectDropdown","props","units","show","setShow","dimensions","setDimensions","xDim","setXDim","yDim","setYDim","zDim","setZDim","selectedUnits","setSelectedUnits","console","log","state","changeSelectedUnits","e","target","value","handleShow","document","activeElement","blur","handleClose","changeDimensions","onHide"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useState} from 'react';\n\n// NOTE: Modal is throwing a warining ->\n//      \"Warning: findDOMNode is deprecated in StrictMode.\n//      findDOMNode was passed an instance of Transition which is inside StrictMode.\n//      Instead, add a ref directly to the element you want to reference.\n//      Learn more about using refs safely here: https://fb.me/react-strict-mode-find-node\"\n// I've looked into it and it seems that it is an actual issue with the way that Modal is implemented\n// under the hood. They are currently working on fixing it.\nimport Modal from 'react-bootstrap/Modal';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport UTextInput from './UTextInput';\nimport UButton from './UButton';\nimport USelectDropdown from './USelectDropdown';\n/**\n * Select Dropdowns will fill the width of their container\n *\n * @required props:\n *  show\n *\n *\n * @optional props:\n *\n */\n\nexport default (props) => {\n    const units = ['in', 'mm'];\n\n    const [show, setShow] = useState(false);\n    const [dimensions, setDimensions] = useState('');\n    const [xDim, setXDim] = useState('');\n    const [yDim, setYDim] = useState('');\n    const [zDim, setZDim] = useState('');\n    const [selectedUnits, setSelectedUnits] = useState('');\n\n    console.log(props.state);\n\n    let changeSelectedUnits = (e) => {\n        setSelectedUnits(units[e.target.value - 1]);\n    };\n    const handleShow = () => {\n        setShow(true);\n        document.activeElement.blur();\n    };\n    const handleClose = () => {\n        setShow(false);\n        changeDimensions();\n    };\n    let changeDimensions = () => {\n        if (xDim && yDim && zDim && selectedUnits) {\n            setDimensions(xDim + selectedUnits + ' x ' + yDim + selectedUnits + ' x ' + zDim + selectedUnits);\n        }\n    };\n\n    return (\n        <Modal show={props.show} onHide={props.onHide}>\n            <Modal.Header closeButton>\n                <Modal.Title>Dimensions</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Row className='mx-1'>\n                    <Col>\n                        <Row>\n                            <UTextInput\n                                number\n                                placeholder='1.5'\n                                className='my-0'\n                                value={xDim}\n                                onChange={(e) => {\n                                    setXDim(e.target.value);\n                                }}\n                                onClick={() => {}}\n                            />\n                        </Row>\n                        <Row>\n                            <Col>\n                                <span className='sub-label'>x-axis</span>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col className='px-0 vertical-center'>\n                        <span className='horizontal-center'>X</span>\n                    </Col>\n                    <Col>\n                        <Row>\n                            <UTextInput\n                                number\n                                placeholder='2.0'\n                                value={yDim}\n                                onChange={(e) => {\n                                    setYDim(e.target.value);\n                                }}\n                                onClick={() => {}}\n                            />\n                        </Row>\n                        <Row className='sub-label'>\n                            <Col>\n                                <span className='sub-label'>y-axis</span>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col className='px-0 vertical-center'>\n                        <span className='horizontal-center'>X</span>\n                    </Col>\n                    <Col>\n                        <Row>\n                            <UTextInput\n                                number\n                                placeholder='2.5'\n                                value={zDim}\n                                onChange={(e) => {\n                                    setZDim(e.target.value);\n                                }}\n                                onClick={() => {}}\n                            />\n                        </Row>\n                        <Row className='sub-label'>\n                            <Col>\n                                <span className='sub-label'>z-axis</span>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col lg={'3'}>\n                        <USelectDropdown\n                            onChange={(e) => changeSelectedUnits(e)}\n                            value={selectedUnits}\n                            placeholder='Units'\n                            options={units}\n                        />\n                    </Col>\n                </Row>\n            </Modal.Body>\n            <Modal.Footer>\n                <UButton onClick={props.handleClose}>Set Dimensions</UButton>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}