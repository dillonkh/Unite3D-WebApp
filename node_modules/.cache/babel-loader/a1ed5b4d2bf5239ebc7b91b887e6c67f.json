{"ast":null,"code":"var _jsxFileName = \"/Users/dillonharris/code/3DPrinterSharing-Web/src/components/BrowsingManager.js\";\nimport React from 'react';\nimport BrowsingNav from './BrowsingNav';\nimport ImageCard from './ImageCard';\nimport '../style/Browsing.css';\nimport { getMyModels, getMyOffers, getMyJobsInProgress, getMyCompletedPrints, getNewJobs, getMyBids, getCurrentJobs, getPastJobs } from '../Backend';\nexport default class BrowsingManger extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNavClick = navItem => {\n      this.setState({\n        selectedApi: navItem.api\n      }, this.gatherModels // callback.. notice it doesn't have the () because we're not executing it, we're passing it in.\n      );\n    };\n\n    let modelerNavItems = [{\n      title: 'Models',\n      api: getMyModels\n    }, {\n      title: 'My Offers',\n      api: getMyOffers\n    }, {\n      title: 'Jobs In Progress',\n      api: getMyJobsInProgress\n    }, {\n      title: 'Completed Prints',\n      api: getMyCompletedPrints\n    }];\n    let vendorNavItems = [{\n      title: 'New Jobs',\n      api: getNewJobs\n    }, {\n      title: 'My Bids',\n      api: getMyBids\n    }, {\n      title: 'Current Jobs',\n      api: getCurrentJobs\n    }, {\n      title: 'Past Jobs',\n      api: getPastJobs\n    }];\n    this.state = {\n      imageCards: [],\n      selectedNavigation: '',\n      selectedApi: props.iAmModeler ? getMyModels : getNewJobs,\n      navItems: props.iAmModeler ? modelerNavItems : vendorNavItems\n    };\n  }\n\n  componentDidMount() {\n    this.gatherModels();\n  }\n\n  gatherModels() {\n    let modelInfo = this.state.selectedApi();\n    let imageCards = [];\n    let id = 1;\n    modelInfo.forEach(model => {\n      imageCards.push( /*#__PURE__*/React.createElement(ImageCard, {\n        title: model.title,\n        value: model.value,\n        content: 'Filament: ' + model.filament + ' DIM: ' + model.dim + ' ' + model.units,\n        image: model.base64Image,\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 23\n        }\n      }));\n      id += 1;\n    });\n    this.setState({\n      imageCards: imageCards\n    });\n  }\n\n  render() {\n    if (!this.state.imageCards.length) {\n      return /*#__PURE__*/React.createElement(BrowsingNav, {\n        className: \"browsing-nav\",\n        navItems: this.state.navItems,\n        handleClick: this.handleNavClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BrowsingNav, {\n      className: \"browsing-nav\",\n      navItems: this.state.navItems,\n      handleClick: this.handleNavClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"browsing-grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, this.state.imageCards));\n  }\n\n}","map":{"version":3,"sources":["/Users/dillonharris/code/3DPrinterSharing-Web/src/components/BrowsingManager.js"],"names":["React","BrowsingNav","ImageCard","getMyModels","getMyOffers","getMyJobsInProgress","getMyCompletedPrints","getNewJobs","getMyBids","getCurrentJobs","getPastJobs","BrowsingManger","Component","constructor","props","handleNavClick","navItem","setState","selectedApi","api","gatherModels","modelerNavItems","title","vendorNavItems","state","imageCards","selectedNavigation","iAmModeler","navItems","componentDidMount","modelInfo","id","forEach","model","push","value","filament","dim","units","base64Image","render","length"],"mappings":"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","sourcesContent":["import React from 'react'\nimport BrowsingNav from './BrowsingNav'\nimport ImageCard from './ImageCard'\nimport '../style/Browsing.css'\nimport {getMyModels, getMyOffers, getMyJobsInProgress, getMyCompletedPrints,\n  getNewJobs, getMyBids, getCurrentJobs, getPastJobs} from '../Backend'\n\nexport default class BrowsingManger extends React.Component{\n  constructor(props){\n    super(props);\n    let modelerNavItems = [\n      {\n        title: 'Models',\n        api: getMyModels\n      },\n      {\n        title: 'My Offers',\n        api: getMyOffers\n      },\n      {\n        title: 'Jobs In Progress',\n        api: getMyJobsInProgress\n      },\n      {\n        title: 'Completed Prints',\n        api: getMyCompletedPrints\n      },\n    ]\n\n    let vendorNavItems = [\n      {\n        title: 'New Jobs',\n        api: getNewJobs\n      },\n      {\n        title: 'My Bids',\n        api: getMyBids\n      },\n      {\n        title: 'Current Jobs',\n        api: getCurrentJobs\n      },\n      {\n        title: 'Past Jobs',\n        api: getPastJobs\n      },\n    ]\n\n    this.state = {\n      imageCards: [],\n      selectedNavigation: '',\n      selectedApi: props.iAmModeler ? getMyModels : getNewJobs,\n      navItems: props.iAmModeler ? modelerNavItems : vendorNavItems\n    }\n  }\n\n  componentDidMount(){\n    this.gatherModels()\n  }\n\n  gatherModels(){\n    let modelInfo = this.state.selectedApi()\n    let imageCards = []\n    let id = 1;\n    modelInfo.forEach((model) => {\n      imageCards.push(<ImageCard \n        title={model.title}\n        value={model.value} \n        content={'Filament: ' + model.filament + ' DIM: ' + model.dim + ' ' + model.units}\n        image={model.base64Image}\n        key={id}/>);\n        id += 1;  \n    });\n    this.setState({imageCards: imageCards});\n  }\n\n  handleNavClick = (navItem) => {\n    this.setState({\n      selectedApi: navItem.api\n    }, this.gatherModels // callback.. notice it doesn't have the () because we're not executing it, we're passing it in.\n    );\n  }\n\n  render(){\n    if(!this.state.imageCards.length){\n      return(\n        <BrowsingNav className='browsing-nav' navItems={this.state.navItems} handleClick={this.handleNavClick}/>\n      )\n    }\n    return(\n      <div>\n        <BrowsingNav className='browsing-nav' navItems={this.state.navItems} handleClick={this.handleNavClick}/>\n        <section className='browsing-grid'>\n          {this.state.imageCards}\n        </section>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}