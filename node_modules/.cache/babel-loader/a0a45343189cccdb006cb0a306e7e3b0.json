{"ast":null,"code":"var _jsxFileName = \"/Users/dillonharris/code/3DPrinterSharing-Web/src/components/BrowsingManager.js\";\nimport React from \"react\";\nimport BrowsingNav from \"./BrowsingNav\";\nimport ImageCard from \"./ImageCard\";\nimport \"../style/Browsing.css\";\nimport { getMyModels, getMyOffers, getMyJobsInProgress, getMyCompletedPrints, getNewJobs, getMyBids, getCurrentJobs, getPastJobs } from \"../Backend\";\nexport default class BrowsingManger extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNavClick = navItem => {\n      this.setState({\n        selectedApi: navItem.api\n      }, this.gatherModels // callback.. notice it doesn't have the () because we're not executing it, we're passing it in.\n      );\n    };\n\n    let modelerNavItems = [{\n      title: \"Models\",\n      api: getMyModels\n    }, {\n      title: \"My Offers\",\n      api: getMyOffers\n    }, {\n      title: \"Jobs In Progress\",\n      api: getMyJobsInProgress\n    }, {\n      title: \"Completed Prints\",\n      api: getMyCompletedPrints\n    }];\n    let vendorNavItems = [{\n      title: \"New Jobs\",\n      api: getNewJobs\n    }, {\n      title: \"My Bids\",\n      api: getMyBids\n    }, {\n      title: \"Current Jobs\",\n      api: getCurrentJobs\n    }, {\n      title: \"Past Jobs\",\n      api: getPastJobs\n    }];\n    this.state = {\n      imageCards: [],\n      selectedNavigation: \"\",\n      selectedApi: props.iAmModeler ? getMyModels : getNewJobs,\n      navItems: props.iAmModeler ? modelerNavItems : vendorNavItems\n    };\n  }\n\n  componentDidMount() {\n    this.gatherModels();\n  }\n\n  gatherModels() {\n    let modelInfo = this.state.selectedApi();\n    let imageCards = [];\n    let id = 1;\n    modelInfo.forEach(model => {\n      imageCards.push( /*#__PURE__*/React.createElement(ImageCard, {\n        title: model.title,\n        value: model.value,\n        content: \"Filament: \" + model.filament + \" DIM: \" + model.dim + \" \" + model.units,\n        image: model.base64Image,\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }));\n      id += 1;\n    });\n    this.setState({\n      imageCards: imageCards\n    });\n  }\n\n  render() {\n    if (!this.state.imageCards.length) {\n      return /*#__PURE__*/React.createElement(BrowsingNav, {\n        className: \"browsing-nav\",\n        navItems: this.state.navItems,\n        handleClick: this.handleNavClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BrowsingNav, {\n      className: \"browsing-nav\",\n      navItems: this.state.navItems,\n      handleClick: this.handleNavClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"browsing-grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, this.state.imageCards));\n  }\n\n}","map":{"version":3,"sources":["/Users/dillonharris/code/3DPrinterSharing-Web/src/components/BrowsingManager.js"],"names":["React","BrowsingNav","ImageCard","getMyModels","getMyOffers","getMyJobsInProgress","getMyCompletedPrints","getNewJobs","getMyBids","getCurrentJobs","getPastJobs","BrowsingManger","Component","constructor","props","handleNavClick","navItem","setState","selectedApi","api","gatherModels","modelerNavItems","title","vendorNavItems","state","imageCards","selectedNavigation","iAmModeler","navItems","componentDidMount","modelInfo","id","forEach","model","push","value","filament","dim","units","base64Image","render","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport BrowsingNav from \"./BrowsingNav\";\nimport ImageCard from \"./ImageCard\";\nimport \"../style/Browsing.css\";\nimport {\n  getMyModels,\n  getMyOffers,\n  getMyJobsInProgress,\n  getMyCompletedPrints,\n  getNewJobs,\n  getMyBids,\n  getCurrentJobs,\n  getPastJobs,\n} from \"../Backend\";\n\nexport default class BrowsingManger extends React.Component {\n  constructor(props) {\n    super(props);\n    let modelerNavItems = [\n      {\n        title: \"Models\",\n        api: getMyModels,\n      },\n      {\n        title: \"My Offers\",\n        api: getMyOffers,\n      },\n      {\n        title: \"Jobs In Progress\",\n        api: getMyJobsInProgress,\n      },\n      {\n        title: \"Completed Prints\",\n        api: getMyCompletedPrints,\n      },\n    ];\n\n    let vendorNavItems = [\n      {\n        title: \"New Jobs\",\n        api: getNewJobs,\n      },\n      {\n        title: \"My Bids\",\n        api: getMyBids,\n      },\n      {\n        title: \"Current Jobs\",\n        api: getCurrentJobs,\n      },\n      {\n        title: \"Past Jobs\",\n        api: getPastJobs,\n      },\n    ];\n\n    this.state = {\n      imageCards: [],\n      selectedNavigation: \"\",\n      selectedApi: props.iAmModeler ? getMyModels : getNewJobs,\n      navItems: props.iAmModeler ? modelerNavItems : vendorNavItems,\n    };\n  }\n\n  componentDidMount() {\n    this.gatherModels();\n  }\n\n  gatherModels() {\n    let modelInfo = this.state.selectedApi();\n    let imageCards = [];\n    let id = 1;\n    modelInfo.forEach((model) => {\n      imageCards.push(\n        <ImageCard\n          title={model.title}\n          value={model.value}\n          content={\n            \"Filament: \" +\n            model.filament +\n            \" DIM: \" +\n            model.dim +\n            \" \" +\n            model.units\n          }\n          image={model.base64Image}\n          key={id}\n        />\n      );\n      id += 1;\n    });\n    this.setState({ imageCards: imageCards });\n  }\n\n  handleNavClick = (navItem) => {\n    this.setState(\n      {\n        selectedApi: navItem.api,\n      },\n      this.gatherModels // callback.. notice it doesn't have the () because we're not executing it, we're passing it in.\n    );\n  };\n\n  render() {\n    if (!this.state.imageCards.length) {\n      return (\n        <BrowsingNav\n          className=\"browsing-nav\"\n          navItems={this.state.navItems}\n          handleClick={this.handleNavClick}\n        />\n      );\n    }\n    return (\n      <div>\n        <BrowsingNav\n          className=\"browsing-nav\"\n          navItems={this.state.navItems}\n          handleClick={this.handleNavClick}\n        />\n        <section className=\"browsing-grid\">{this.state.imageCards}</section>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}