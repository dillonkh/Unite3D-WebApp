{"ast":null,"code":"import axios from 'axios';\nimport config from './static/config'; // const baseUrl = 'http://localhost:3000'\n\nfunction setAuthToken(token) {\n  localStorage.authToken = token;\n}\n\nexport async function register(email, password, first_name, last_name, isVendor) {\n  await axios({\n    method: 'post',\n    url: 'http://localhost:8000/user/register',\n    data: {\n      email: email,\n      password: password,\n      first_name: first_name,\n      last_name: last_name,\n      is_vendor: isVendor\n    }\n  }).then(response => {\n    setAuthToken(response.data.token);\n  });\n} // prettier-ignore\n\nexport async function registerPrinter(make, model, filaments, printDimensionX, printDimensionY, printDimensionZ, dimensionUnit) {\n  let response = await axios({\n    method: 'post',\n    url: 'http://localhost:8000/user/verify',\n    data: {\n      token: localStorage.authToken\n    }\n  });\n  await axios({\n    method: 'post',\n    url: 'http://localhost:8000/user/printer/register',\n    headers: {\n      Authorization: `Bearer ${localStorage.authToken}`\n    },\n    data: {\n      make: make,\n      model: model,\n      filaments: filaments,\n      max_print_dimension_x: printDimensionX,\n      max_print_dimension_y: printDimensionY,\n      max_print_dimension_z: printDimensionZ,\n      dimension_unit: dimensionUnit\n    }\n  });\n  return response.data.user;\n}\nexport async function signIn(email, password) {\n  await axios({\n    method: 'post',\n    url: 'http://localhost:8000/user/login',\n    data: {\n      email: email,\n      password: password\n    }\n  }).then(response => {\n    setAuthToken(response.data.token);\n  });\n}\n/* MODELER API */\n\nexport function getMyModels() {\n  return config.models;\n}\nexport function getMyOffers() {\n  return config.myOffers;\n}\nexport function getMyJobsInProgress() {\n  return config.models;\n}\nexport function getMyCompletedPrints() {\n  return config.models;\n}\n/* VENDOR API */\n\nexport function getNewJobs() {\n  return config.models;\n}\nexport function getMyBids() {\n  return config.models;\n}\nexport function getCurrentJobs() {\n  return config.models;\n}\nexport function getPastJobs() {\n  return config.models;\n}","map":{"version":3,"sources":["/Users/dillonharris/code/3DPrinterSharing-Web/src/Backend.js"],"names":["axios","config","setAuthToken","token","localStorage","authToken","register","email","password","first_name","last_name","isVendor","method","url","data","is_vendor","then","response","registerPrinter","make","model","filaments","printDimensionX","printDimensionY","printDimensionZ","dimensionUnit","headers","Authorization","max_print_dimension_x","max_print_dimension_y","max_print_dimension_z","dimension_unit","user","signIn","getMyModels","models","getMyOffers","myOffers","getMyJobsInProgress","getMyCompletedPrints","getNewJobs","getMyBids","getCurrentJobs","getPastJobs"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport config from './static/config';\n\n// const baseUrl = 'http://localhost:3000'\n\nfunction setAuthToken(token) {\n    localStorage.authToken = token;\n}\n\nexport async function register(email, password, first_name, last_name, isVendor) {\n    await axios({\n        method: 'post',\n        url: 'http://localhost:8000/user/register',\n        data: {\n            email: email,\n            password: password,\n            first_name: first_name,\n            last_name: last_name,\n            is_vendor: isVendor,\n        },\n    }).then((response) => {\n        setAuthToken(response.data.token);\n    });\n}\n\n// prettier-ignore\nexport async function registerPrinter(make, model, filaments, \n    printDimensionX, printDimensionY, printDimensionZ, dimensionUnit) {\n    let response = await axios({\n        method: 'post',\n        url: 'http://localhost:8000/user/verify',\n        data: {\n            token: localStorage.authToken\n        },\n    });\n    await axios({\n        method: 'post',\n        url: 'http://localhost:8000/user/printer/register',\n        headers: {\n             Authorization: `Bearer ${localStorage.authToken}`\n          },\n        data: {\n            make: make,\n            model: model,\n            filaments: filaments,\n            max_print_dimension_x: printDimensionX,\n            max_print_dimension_y: printDimensionY,\n            max_print_dimension_z: printDimensionZ,\n            dimension_unit: dimensionUnit,\n        },\n    });\n    return response.data.user;\n}\n\nexport async function signIn(email, password) {\n    await axios({\n        method: 'post',\n        url: 'http://localhost:8000/user/login',\n        data: {\n            email: email,\n            password: password,\n        },\n    }).then((response) => {\n        setAuthToken(response.data.token);\n    });\n}\n\n/* MODELER API */\nexport function getMyModels() {\n    return config.models;\n}\n\nexport function getMyOffers() {\n    return config.myOffers;\n}\n\nexport function getMyJobsInProgress() {\n    return config.models;\n}\n\nexport function getMyCompletedPrints() {\n    return config.models;\n}\n\n/* VENDOR API */\nexport function getNewJobs() {\n    return config.models;\n}\n\nexport function getMyBids() {\n    return config.models;\n}\n\nexport function getCurrentJobs() {\n    return config.models;\n}\n\nexport function getPastJobs() {\n    return config.models;\n}\n"]},"metadata":{},"sourceType":"module"}