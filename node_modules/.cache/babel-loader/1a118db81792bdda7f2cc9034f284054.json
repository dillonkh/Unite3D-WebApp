{"ast":null,"code":"var _jsxFileName = \"/Users/dillonharris/code/3DPrinterSharing-Web/src/components/Modals/ModalJobDetails.js\";\nimport React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport UButton from '../utilities/UButton';\nimport { AiOutlineRightCircle, AiOutlineLeftCircle } from 'react-icons/ai';\nimport '../../style/Modal.css';\nimport classNames from 'classnames';\nimport axios from 'axios';\nexport default class ModalJobDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.gatherJsx = () => {\n      let myJsx = [];\n      let dimensions = `${this.props.model.print_dimension_x} x ${this.props.model.print_dimension_y} x ${this.props.model.print_dimension_z} ${this.props.model.dimension_unit}`;\n      myJsx.push( /*#__PURE__*/React.createElement(\"section\", {\n        className: \"custom-modal-jsx-section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-general-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }\n      }, this.props.model.name), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"budget\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }\n      }, \"Budget: $\", this.props.model.budget)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-general-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"jobDetails\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }, \"Job Details\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"detailGrid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"subtitle filament\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }\n      }, \"Filament\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filament-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }\n      }, this.props.model.filament), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"subtitle fill-model\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }\n      }, \"Fill\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fill-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }\n      }, this.props.model.fill, \"%\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"subtitle dimension\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }\n      }, \"Dimensions\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dim-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }\n      }, dimensions)), this.downloadButton()), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"jobDetails\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }, \"Details\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"detailsSection\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, this.props.model.details))));\n      this.props.model.additional_images.forEach(image => {\n        myJsx.push( /*#__PURE__*/React.createElement(\"section\", {\n          className: \"custom-modal-jsx-section\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"image\",\n          alt: \"\",\n          src: image.image,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }\n        })));\n      });\n      this.setState({\n        jsx: myJsx\n      });\n    };\n\n    this.componentDidUpdate = prevProps => {\n      //prevProps is the previous props of the component before being updated\n      //so, if this.props != prevProps it means that component props have been updated\n      if (this.props.show && !prevProps.show) {\n        this.setState({\n          show: this.props.show\n        });\n      }\n    };\n\n    this.componentDidMount = () => {\n      this.gatherJsx(); //make an API call here with the printJobID to get the appropriate job detail data\n    };\n\n    this.decrementJsxIndex = () => {\n      this.setState(prevState => ({\n        jsxIndex: prevState.jsxIndex - 1\n      }));\n    };\n\n    this.incrementJsxIndex = () => {\n      this.setState(prevState => ({\n        jsxIndex: prevState.jsxIndex + 1\n      }));\n    };\n\n    this.downloadButton = () => {\n      if (this.props.downloadButton) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"download-button-wrapper\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(UButton, {\n          size: \"sm\",\n          onClick: this.downloadFile,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }\n        }, \"Download File\"));\n      } else {\n        return /*#__PURE__*/React.createElement(React.Fragment, null);\n      }\n    };\n\n    this.markComplete = () => {\n      axios({\n        method: 'post',\n        url: 'http://localhost:8000/jobs/completed',\n        data: {\n          print_job: this.props.model.id\n        },\n        headers: {\n          Authorization: 'Bearer ' + localStorage.authToken\n        }\n      }).then(response => {\n        console.log(response);\n      }).catch(error => {\n        if (error.response) {\n          // Request made and server responded\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log('Error', error.message);\n        }\n      });\n    };\n\n    this.completeButton = () => {\n      if (!this.props.model.completed) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"complete-button-wrapper\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(UButton, {\n          variant: \"primary-outline\",\n          onClick: this.markComplete,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }\n        }, \"Mark Complete\"));\n      } else {\n        return /*#__PURE__*/React.createElement(React.Fragment, null);\n      }\n    };\n\n    this.downloadFile = () => {\n      window.open(this.props.model.model, '_blank');\n    };\n\n    this.props = props;\n    this.state = {\n      show: props.show,\n      printJobID: props.printJobID,\n      jsxIndex: 0,\n      jsx: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: this.props.show,\n      className: \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      onClick: this.props.handleClose,\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    }, \"Job Details\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"modal-general-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames('modal-general-left-right', {\n        invisible: this.state.jsxIndex === 0\n      }),\n      onClick: this.decrementJsxIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(AiOutlineLeftCircle, {\n      className: \"modal-general-next-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    })), this.state.jsx[this.state.jsxIndex], /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames('modal-general-left-right', {\n        invisible: this.state.jsxIndex === this.state.jsx.length - 1\n      }),\n      onClick: this.incrementJsxIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(AiOutlineRightCircle, {\n      className: \"modal-general-next-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, this.completeButton(), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"close-button-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(UButton, {\n      onClick: this.props.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    }, \"Close\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/dillonharris/code/3DPrinterSharing-Web/src/components/Modals/ModalJobDetails.js"],"names":["React","Modal","UButton","AiOutlineRightCircle","AiOutlineLeftCircle","classNames","axios","ModalJobDetails","Component","constructor","props","gatherJsx","myJsx","dimensions","model","print_dimension_x","print_dimension_y","print_dimension_z","dimension_unit","push","name","budget","filament","fill","downloadButton","details","additional_images","forEach","image","setState","jsx","componentDidUpdate","prevProps","show","componentDidMount","decrementJsxIndex","prevState","jsxIndex","incrementJsxIndex","downloadFile","markComplete","method","url","data","print_job","id","headers","Authorization","localStorage","authToken","then","response","console","log","catch","error","status","request","message","completeButton","completed","window","open","state","printJobID","render","handleClose","invisible","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAAQC,oBAAR,EAA8BC,mBAA9B,QAAwD,gBAAxD;AACA,OAAO,uBAAP;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,eAAN,SAA8BP,KAAK,CAACQ,SAApC,CAA8C;AACzDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBC,SAXmB,GAWP,MAAM;AACd,UAAIC,KAAK,GAAG,EAAZ;AACA,UAAIC,UAAU,GAAI,GAAE,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,iBAAkB,MAAK,KAAKL,KAAL,CAAWI,KAAX,CAAiBE,iBAAkB,MAAK,KAAKN,KAAL,CAAWI,KAAX,CAAiBG,iBAAkB,IAAG,KAAKP,KAAL,CAAWI,KAAX,CAAiBI,cAAe,EAA1K;AACAN,MAAAA,KAAK,CAACO,IAAN,eACI;AAAS,QAAA,SAAS,EAAC,0BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyB,KAAKT,KAAL,CAAWI,KAAX,CAAiBM,IAA1C,CADJ,eAEI;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAmC,KAAKV,KAAL,CAAWI,KAAX,CAAiBO,MAApD,CAFJ,CADJ,eAKI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmC,KAAKX,KAAL,CAAWI,KAAX,CAAiBQ,QAApD,CAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+B,KAAKZ,KAAL,CAAWI,KAAX,CAAiBS,IAAhD,MAJJ,eAKI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ,eAMI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BV,UAA9B,CANJ,CAFJ,EAUK,KAAKW,cAAL,EAVL,CALJ,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+B,KAAKd,KAAL,CAAWI,KAAX,CAAiBW,OAAhD,CAFJ,CAjBJ,CADJ;AAwBA,WAAKf,KAAL,CAAWI,KAAX,CAAiBY,iBAAjB,CAAmCC,OAAnC,CAA4CC,KAAD,IAAW;AAClDhB,QAAAA,KAAK,CAACO,IAAN,eACI;AAAS,UAAA,SAAS,EAAC,0BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAuB,UAAA,GAAG,EAAC,EAA3B;AAA8B,UAAA,GAAG,EAAES,KAAK,CAACA,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAKH,OAND;AAOA,WAAKC,QAAL,CAAc;AAACC,QAAAA,GAAG,EAAElB;AAAN,OAAd;AACH,KA9CkB;;AAAA,SAgDnBmB,kBAhDmB,GAgDGC,SAAD,IAAe;AAChC;AACA;AACA,UAAI,KAAKtB,KAAL,CAAWuB,IAAX,IAAmB,CAACD,SAAS,CAACC,IAAlC,EAAwC;AACpC,aAAKJ,QAAL,CAAc;AAACI,UAAAA,IAAI,EAAE,KAAKvB,KAAL,CAAWuB;AAAlB,SAAd;AACH;AACJ,KAtDkB;;AAAA,SAwDnBC,iBAxDmB,GAwDC,MAAM;AACtB,WAAKvB,SAAL,GADsB,CAEtB;AACH,KA3DkB;;AAAA,SA6DnBwB,iBA7DmB,GA6DC,MAAM;AACtB,WAAKN,QAAL,CAAeO,SAAD,KAAgB;AAC1BC,QAAAA,QAAQ,EAAED,SAAS,CAACC,QAAV,GAAqB;AADL,OAAhB,CAAd;AAGH,KAjEkB;;AAAA,SAmEnBC,iBAnEmB,GAmEC,MAAM;AACtB,WAAKT,QAAL,CAAeO,SAAD,KAAgB;AAC1BC,QAAAA,QAAQ,EAAED,SAAS,CAACC,QAAV,GAAqB;AADL,OAAhB,CAAd;AAGH,KAvEkB;;AAAA,SAyEnBb,cAzEmB,GAyEF,MAAM;AACnB,UAAI,KAAKd,KAAL,CAAWc,cAAf,EAA+B;AAC3B,4BACI;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,OAAD;AAAS,UAAA,IAAI,EAAC,IAAd;AAAmB,UAAA,OAAO,EAAE,KAAKe,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADJ;AAOH,OARD,MAQO;AACH,4BAAO,yCAAP;AACH;AACJ,KArFkB;;AAAA,SAuFnBC,YAvFmB,GAuFJ,MAAM;AACjBlC,MAAAA,KAAK,CAAC;AACFmC,QAAAA,MAAM,EAAE,MADN;AAEFC,QAAAA,GAAG,EAAE,sCAFH;AAGFC,QAAAA,IAAI,EAAE;AACFC,UAAAA,SAAS,EAAE,KAAKlC,KAAL,CAAWI,KAAX,CAAiB+B;AAD1B,SAHJ;AAMFC,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,EAAE,YAAYC,YAAY,CAACC;AADnC;AANP,OAAD,CAAL,CAUKC,IAVL,CAUWC,QAAD,IAAc;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH,OAZL,EAaKG,KAbL,CAaYC,KAAD,IAAW;AACd,YAAIA,KAAK,CAACJ,QAAV,EAAoB;AAChB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACJ,QAAN,CAAeR,IAA3B;AACAS,UAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACJ,QAAN,CAAeK,MAA3B;AACAJ,UAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACJ,QAAN,CAAeL,OAA3B;AACH,SALD,MAKO,IAAIS,KAAK,CAACE,OAAV,EAAmB;AACtB;AACAL,UAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACE,OAAlB;AACH,SAHM,MAGA;AACH;AACAL,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,KAAK,CAACG,OAA3B;AACH;AACJ,OA1BL;AA2BH,KAnHkB;;AAAA,SAqHnBC,cArHmB,GAqHF,MAAM;AACnB,UAAI,CAAC,KAAKjD,KAAL,CAAWI,KAAX,CAAiB8C,SAAtB,EAAiC;AAC7B,4BACI;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,OAAD;AAAS,UAAA,OAAO,EAAC,iBAAjB;AAAmC,UAAA,OAAO,EAAE,KAAKpB,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADJ;AAOH,OARD,MAQO;AACH,4BAAO,yCAAP;AACH;AACJ,KAjIkB;;AAAA,SAmInBD,YAnImB,GAmIJ,MAAM;AACjBsB,MAAAA,MAAM,CAACC,IAAP,CAAY,KAAKpD,KAAL,CAAWI,KAAX,CAAiBA,KAA7B,EAAoC,QAApC;AACH,KArIkB;;AAEf,SAAKJ,KAAL,GAAaA,KAAb;AACA,SAAKqD,KAAL,GAAa;AACT9B,MAAAA,IAAI,EAAEvB,KAAK,CAACuB,IADH;AAET+B,MAAAA,UAAU,EAAEtD,KAAK,CAACsD,UAFT;AAGT3B,MAAAA,QAAQ,EAAE,CAHD;AAITP,MAAAA,GAAG,EAAE;AAJI,KAAb;AAMH;;AA8HDmC,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKvD,KAAL,CAAWuB,IAAxB;AAA8B,MAAA,SAAS,EAAC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,OAAO,EAAE,KAAKvB,KAAL,CAAWwD,WAAlC;AAA+C,MAAA,WAAW,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CADJ,eAII,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAS,MAAA,SAAS,EAAC,uBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,SAAS,EAAE7D,UAAU,CAAC,0BAAD,EAA6B;AAC9C8D,QAAAA,SAAS,EAAE,KAAKJ,KAAL,CAAW1B,QAAX,KAAwB;AADW,OAA7B,CADzB;AAII,MAAA,OAAO,EAAE,KAAKF,iBAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI,oBAAC,mBAAD;AAAqB,MAAA,SAAS,EAAC,4BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ,EAQK,KAAK4B,KAAL,CAAWjC,GAAX,CAAe,KAAKiC,KAAL,CAAW1B,QAA1B,CARL,eASI;AACI,MAAA,SAAS,EAAEhC,UAAU,CAAC,0BAAD,EAA6B;AAC9C8D,QAAAA,SAAS,EAAE,KAAKJ,KAAL,CAAW1B,QAAX,KAAwB,KAAK0B,KAAL,CAAWjC,GAAX,CAAesC,MAAf,GAAwB;AADb,OAA7B,CADzB;AAII,MAAA,OAAO,EAAE,KAAK9B,iBAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI,oBAAC,oBAAD;AAAsB,MAAA,SAAS,EAAC,4BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CATJ,CADJ,CAJJ,eAuBI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKqB,cAAL,EADL,eAEI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAE,KAAKjD,KAAL,CAAWwD,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CAFJ,CAvBJ,CADJ;AAgCH;;AAzKwD","sourcesContent":["import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport UButton from '../utilities/UButton';\nimport {AiOutlineRightCircle, AiOutlineLeftCircle} from 'react-icons/ai';\nimport '../../style/Modal.css';\nimport classNames from 'classnames';\n\nimport axios from 'axios';\n\nexport default class ModalJobDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props = props;\n        this.state = {\n            show: props.show,\n            printJobID: props.printJobID,\n            jsxIndex: 0,\n            jsx: [],\n        };\n    }\n\n    gatherJsx = () => {\n        let myJsx = [];\n        let dimensions = `${this.props.model.print_dimension_x} x ${this.props.model.print_dimension_y} x ${this.props.model.print_dimension_z} ${this.props.model.dimension_unit}`;\n        myJsx.push(\n            <section className='custom-modal-jsx-section'>\n                <div className='modal-general-header'>\n                    <span className='title'>{this.props.model.name}</span>\n                    <span className='budget'>Budget: ${this.props.model.budget}</span>\n                </div>\n                <div className='modal-general-details'>\n                    <h4 className='jobDetails'>Job Details</h4>\n                    <div className='detailGrid'>\n                        <div className='subtitle filament'>Filament</div>\n                        <div className='filament-details'>{this.props.model.filament}</div>\n                        <div className='subtitle fill-model'>Fill</div>\n                        <div className='fill-details'>{this.props.model.fill}%</div>\n                        <div className='subtitle dimension'>Dimensions</div>\n                        <div className='dim-details'>{dimensions}</div>\n                    </div>\n                    {this.downloadButton()}\n                </div>\n                <div>\n                    <div className='jobDetails'>Details</div>\n                    <p className='detailsSection'>{this.props.model.details}</p>\n                </div>\n            </section>,\n        );\n        this.props.model.additional_images.forEach((image) => {\n            myJsx.push(\n                <section className='custom-modal-jsx-section'>\n                    <img className='image' alt='' src={image.image} />\n                </section>,\n            );\n        });\n        this.setState({jsx: myJsx});\n    };\n\n    componentDidUpdate = (prevProps) => {\n        //prevProps is the previous props of the component before being updated\n        //so, if this.props != prevProps it means that component props have been updated\n        if (this.props.show && !prevProps.show) {\n            this.setState({show: this.props.show});\n        }\n    };\n\n    componentDidMount = () => {\n        this.gatherJsx();\n        //make an API call here with the printJobID to get the appropriate job detail data\n    };\n\n    decrementJsxIndex = () => {\n        this.setState((prevState) => ({\n            jsxIndex: prevState.jsxIndex - 1,\n        }));\n    };\n\n    incrementJsxIndex = () => {\n        this.setState((prevState) => ({\n            jsxIndex: prevState.jsxIndex + 1,\n        }));\n    };\n\n    downloadButton = () => {\n        if (this.props.downloadButton) {\n            return (\n                <div className='download-button-wrapper'>\n                    <UButton size='sm' onClick={this.downloadFile}>\n                        Download File\n                    </UButton>\n                </div>\n            );\n        } else {\n            return <></>;\n        }\n    };\n\n    markComplete = () => {\n        axios({\n            method: 'post',\n            url: 'http://localhost:8000/jobs/completed',\n            data: {\n                print_job: this.props.model.id,\n            },\n            headers: {\n                Authorization: 'Bearer ' + localStorage.authToken,\n            },\n        })\n            .then((response) => {\n                console.log(response);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    // Request made and server responded\n                    console.log(error.response.data);\n                    console.log(error.response.status);\n                    console.log(error.response.headers);\n                } else if (error.request) {\n                    // The request was made but no response was received\n                    console.log(error.request);\n                } else {\n                    // Something happened in setting up the request that triggered an Error\n                    console.log('Error', error.message);\n                }\n            });\n    };\n\n    completeButton = () => {\n        if (!this.props.model.completed) {\n            return (\n                <div className='complete-button-wrapper'>\n                    <UButton variant='primary-outline' onClick={this.markComplete}>\n                        Mark Complete\n                    </UButton>\n                </div>\n            );\n        } else {\n            return <></>;\n        }\n    };\n\n    downloadFile = () => {\n        window.open(this.props.model.model, '_blank');\n    };\n\n    render() {\n        return (\n            <Modal show={this.props.show} className='modal'>\n                <Modal.Header onClick={this.props.handleClose} closeButton>\n                    <Modal.Title>Job Details</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <section className='modal-general-section'>\n                        <span\n                            className={classNames('modal-general-left-right', {\n                                invisible: this.state.jsxIndex === 0,\n                            })}\n                            onClick={this.decrementJsxIndex}>\n                            <AiOutlineLeftCircle className='modal-general-next-buttons' />\n                        </span>\n                        {this.state.jsx[this.state.jsxIndex]}\n                        <span\n                            className={classNames('modal-general-left-right', {\n                                invisible: this.state.jsxIndex === this.state.jsx.length - 1,\n                            })}\n                            onClick={this.incrementJsxIndex}>\n                            <AiOutlineRightCircle className='modal-general-next-buttons' />\n                        </span>\n                    </section>\n                </Modal.Body>\n                <Modal.Footer>\n                    {this.completeButton()}\n                    <div className='close-button-wrapper'>\n                        <UButton onClick={this.props.handleClose}>Close</UButton>\n                    </div>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}