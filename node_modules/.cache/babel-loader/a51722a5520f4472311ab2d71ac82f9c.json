{"ast":null,"code":"import axios from 'axios'; // const baseUrl = 'http://localhost:3000'\n\nfunction setAuthToken(token) {\n  localStorage.authToken = token;\n}\n\nexport function setUser(user) {\n  localStorage.user = JSON.stringify(user);\n}\nexport async function register(email, password, first_name, last_name, isVendor) {\n  await axios({\n    method: 'post',\n    url: 'http://localhost:8000/user/register',\n    data: {\n      email: email,\n      password: password,\n      first_name: first_name,\n      last_name: last_name,\n      is_vendor: isVendor\n    }\n  }).then(response => {\n    setAuthToken(response.data.token);\n    setUser(response.data.user);\n  });\n} // prettier-ignore\n\nexport async function registerPrinter(make, model, filaments, printDimensionX, printDimensionY, printDimensionZ, dimensionUnit) {\n  let response = await axios({\n    method: 'post',\n    url: 'http://localhost:8000/user/verify',\n    data: {\n      token: localStorage.authToken\n    }\n  });\n  await axios({\n    method: 'post',\n    url: 'http://localhost:8000/user/printer/register',\n    headers: {\n      Authorization: `Bearer ${localStorage.authToken}`\n    },\n    data: {\n      make: make,\n      model: model,\n      filaments: filaments,\n      max_print_dimension_x: printDimensionX,\n      max_print_dimension_y: printDimensionY,\n      max_print_dimension_z: printDimensionZ,\n      dimension_unit: dimensionUnit\n    }\n  });\n  return response.data.user;\n}\nexport async function signIn(email, password) {\n  await axios({\n    method: 'post',\n    url: 'http://localhost:8000/user/login',\n    data: {\n      email: email,\n      password: password\n    }\n  }).then(response => {\n    console.log(response);\n    setAuthToken(response.data.token);\n  });\n}\nexport async function refreshJWT() {\n  let response = await axios({\n    method: 'post',\n    url: 'http://localhost:8000/user/refresh',\n    data: {\n      token: localStorage.authToken\n    }\n  });\n\n  if (response.status === 200) {\n    setAuthToken(response.data.token);\n    return response.data.user;\n  }\n\n  return response;\n}\nexport async function makeBid(offer, print_job_id, details) {\n  let response = await axios({\n    method: 'post',\n    url: 'http://localhost:8000/jobs/bid',\n    headers: {\n      Authorization: `Bearer ${localStorage.authToken}`\n    },\n    data: {\n      bid: offer,\n      details: details,\n      print_job: print_job_id\n    }\n  });\n\n  if (response.status === 200) {\n    return response.data;\n  }\n\n  return response;\n}\n/* MODELER API */\n\nexport async function getMyModels() {\n  return await axios({\n    method: 'get',\n    url: 'http://localhost:8000/jobs/list',\n    headers: {\n      Authorization: `Bearer ${localStorage.authToken}`\n    }\n  }).then(response => {\n    return response.data;\n  });\n}\nexport async function getMyOffers() {\n  return await axios({\n    method: 'get',\n    url: 'http://localhost:8000/jobs/list?filter=offers-pending',\n    headers: {\n      Authorization: `Bearer ${localStorage.authToken}`\n    }\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    if (error.response) {\n      // Request made and server responded\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n\n    return [];\n  });\n}\nexport async function getMyJobsInProgress() {\n  return await axios({\n    method: 'get',\n    url: 'http://localhost:8000/jobs/list?filter=accepted-incomplete',\n    headers: {\n      Authorization: `Bearer ${localStorage.authToken}`\n    }\n  }).then(response => {\n    return response.data;\n  });\n}\nexport async function getMyCompletedPrints() {\n  return await axios({\n    method: 'get',\n    url: 'http://localhost:8000/jobs/list?filter=accepted-complete',\n    headers: {\n      Authorization: `Bearer ${localStorage.authToken}`\n    }\n  }).then(response => {\n    return response.data;\n  });\n}\n/* VENDOR API */\n\nexport async function getNewJobs() {\n  return await axios({\n    method: 'get',\n    url: 'http://localhost:8000/jobs/list',\n    headers: {\n      Authorization: `Bearer ${localStorage.authToken}`\n    }\n  }).then(response => {\n    return response.data;\n  });\n}\nexport async function getMyBids() {\n  return await axios({\n    method: 'get',\n    url: 'http://localhost:8000/jobs/list?filter=bids-pending',\n    headers: {\n      Authorization: `Bearer ${localStorage.authToken}`\n    }\n  }).then(response => {\n    console.log(response.data);\n    return response.data;\n  }).catch(error => {\n    if (error.response) {\n      // Request made and server responded\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n\n    return [];\n  });\n}\nexport async function getCurrentJobs() {\n  return await axios({\n    method: 'get',\n    url: 'http://localhost:8000/jobs/list?filter=progress-pending',\n    headers: {\n      Authorization: `Bearer ${localStorage.authToken}`\n    }\n  }).then(response => {\n    console.log(response.data);\n    return response.data;\n  });\n}\nexport async function getPastJobs() {\n  return await axios({\n    method: 'get',\n    url: 'http://localhost:8000/jobs/list?filter=completed',\n    headers: {\n      Authorization: `Bearer ${localStorage.authToken}`\n    }\n  }).then(response => {\n    return response.data;\n  });\n}","map":{"version":3,"sources":["/Users/dillonharris/code/3DPrinterSharing-Web/src/Backend.js"],"names":["axios","setAuthToken","token","localStorage","authToken","setUser","user","JSON","stringify","register","email","password","first_name","last_name","isVendor","method","url","data","is_vendor","then","response","registerPrinter","make","model","filaments","printDimensionX","printDimensionY","printDimensionZ","dimensionUnit","headers","Authorization","max_print_dimension_x","max_print_dimension_y","max_print_dimension_z","dimension_unit","signIn","console","log","refreshJWT","status","makeBid","offer","print_job_id","details","bid","print_job","getMyModels","getMyOffers","catch","error","request","message","getMyJobsInProgress","getMyCompletedPrints","getNewJobs","getMyBids","getCurrentJobs","getPastJobs"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\n// const baseUrl = 'http://localhost:3000'\n\nfunction setAuthToken(token) {\n    localStorage.authToken = token;\n}\n\nexport function setUser(user) {\n    localStorage.user = JSON.stringify(user);\n}\n\nexport async function register(email, password, first_name, last_name, isVendor) {\n    await axios({\n        method: 'post',\n        url: 'http://localhost:8000/user/register',\n        data: {\n            email: email,\n            password: password,\n            first_name: first_name,\n            last_name: last_name,\n            is_vendor: isVendor,\n        },\n    }).then((response) => {\n        setAuthToken(response.data.token);\n        setUser(response.data.user);\n    });\n}\n\n// prettier-ignore\nexport async function registerPrinter(make, model, filaments, \n    printDimensionX, printDimensionY, printDimensionZ, dimensionUnit) {\n    let response = await axios({\n        method: 'post',\n        url: 'http://localhost:8000/user/verify',\n        data: {\n            token: localStorage.authToken\n        },\n    });\n    await axios({\n        method: 'post',\n        url: 'http://localhost:8000/user/printer/register',\n        headers: {\n             Authorization: `Bearer ${localStorage.authToken}`\n          },\n        data: {\n            make: make,\n            model: model,\n            filaments: filaments,\n            max_print_dimension_x: printDimensionX,\n            max_print_dimension_y: printDimensionY,\n            max_print_dimension_z: printDimensionZ,\n            dimension_unit: dimensionUnit,\n        },\n    });\n    return response.data.user;\n}\n\nexport async function signIn(email, password) {\n    await axios({\n        method: 'post',\n        url: 'http://localhost:8000/user/login',\n        data: {\n            email: email,\n            password: password,\n        },\n    }).then((response) => {\n        console.log(response);\n        setAuthToken(response.data.token);\n    });\n}\n\nexport async function refreshJWT() {\n    let response = await axios({\n        method: 'post',\n        url: 'http://localhost:8000/user/refresh',\n        data: {\n            token: localStorage.authToken,\n        },\n    });\n    if (response.status === 200) {\n        setAuthToken(response.data.token);\n        return response.data.user;\n    }\n    return response;\n}\n\nexport async function makeBid(offer, print_job_id, details) {\n    let response = await axios({\n        method: 'post',\n        url: 'http://localhost:8000/jobs/bid',\n        headers: {\n            Authorization: `Bearer ${localStorage.authToken}`,\n        },\n        data: {\n            bid: offer,\n            details: details,\n            print_job: print_job_id,\n        },\n    });\n    if (response.status === 200) {\n        return response.data;\n    }\n    return response;\n}\n\n/* MODELER API */\nexport async function getMyModels() {\n    return await axios({\n        method: 'get',\n        url: 'http://localhost:8000/jobs/list',\n        headers: {\n            Authorization: `Bearer ${localStorage.authToken}`,\n        },\n    }).then((response) => {\n        return response.data;\n    });\n}\n\nexport async function getMyOffers() {\n    return await axios({\n        method: 'get',\n        url: 'http://localhost:8000/jobs/list?filter=offers-pending',\n        headers: {\n            Authorization: `Bearer ${localStorage.authToken}`,\n        },\n    })\n        .then((response) => {\n            return response.data;\n        })\n        .catch((error) => {\n            if (error.response) {\n                // Request made and server responded\n                console.log(error.response.data);\n                console.log(error.response.status);\n                console.log(error.response.headers);\n            } else if (error.request) {\n                // The request was made but no response was received\n                console.log(error.request);\n            } else {\n                // Something happened in setting up the request that triggered an Error\n                console.log('Error', error.message);\n            }\n            return [];\n        });\n}\n\nexport async function getMyJobsInProgress() {\n    return await axios({\n        method: 'get',\n        url: 'http://localhost:8000/jobs/list?filter=accepted-incomplete',\n        headers: {\n            Authorization: `Bearer ${localStorage.authToken}`,\n        },\n    }).then((response) => {\n        return response.data;\n    });\n}\n\nexport async function getMyCompletedPrints() {\n    return await axios({\n        method: 'get',\n        url: 'http://localhost:8000/jobs/list?filter=accepted-complete',\n        headers: {\n            Authorization: `Bearer ${localStorage.authToken}`,\n        },\n    }).then((response) => {\n        return response.data;\n    });\n}\n\n/* VENDOR API */\nexport async function getNewJobs() {\n    return await axios({\n        method: 'get',\n        url: 'http://localhost:8000/jobs/list',\n        headers: {\n            Authorization: `Bearer ${localStorage.authToken}`,\n        },\n    }).then((response) => {\n        return response.data;\n    });\n}\n\nexport async function getMyBids() {\n    return await axios({\n        method: 'get',\n        url: 'http://localhost:8000/jobs/list?filter=bids-pending',\n        headers: {\n            Authorization: `Bearer ${localStorage.authToken}`,\n        },\n    })\n        .then((response) => {\n            console.log(response.data);\n            return response.data;\n        })\n        .catch((error) => {\n            if (error.response) {\n                // Request made and server responded\n                console.log(error.response.data);\n                console.log(error.response.status);\n                console.log(error.response.headers);\n            } else if (error.request) {\n                // The request was made but no response was received\n                console.log(error.request);\n            } else {\n                // Something happened in setting up the request that triggered an Error\n                console.log('Error', error.message);\n            }\n            return [];\n        });\n}\n\nexport async function getCurrentJobs() {\n    return await axios({\n        method: 'get',\n        url: 'http://localhost:8000/jobs/list?filter=progress-pending',\n        headers: {\n            Authorization: `Bearer ${localStorage.authToken}`,\n        },\n    }).then((response) => {\n        console.log(response.data);\n        return response.data;\n    });\n}\n\nexport async function getPastJobs() {\n    return await axios({\n        method: 'get',\n        url: 'http://localhost:8000/jobs/list?filter=completed',\n        headers: {\n            Authorization: `Bearer ${localStorage.authToken}`,\n        },\n    }).then((response) => {\n        return response.data;\n    });\n}\n"]},"metadata":{},"sourceType":"module"}