{"ast":null,"code":"var _jsxFileName = \"/Users/dillonharris/code/3DPrinterSharing-Web/src/components/Modals/ModalBids.js\";\nimport React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport UButton from '../utilities/UButton';\nimport { AiOutlineRightCircle, AiOutlineLeftCircle } from 'react-icons/ai';\nimport '../../style/Modal.css'; // import config from '../../static/config';\n\nimport classNames from 'classnames';\nimport axios from 'axios';\nimport { getMyOffers } from '../../Backend';\nexport default class ModalBids extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.hire = vendorOfferID => {\n      this.props.handleClose();\n      console.log('hiring person with vendorOffer: ', vendorOfferID); //MAKE API CALL TO HIRE THIS PERSON\n\n      axios({\n        method: 'post',\n        url: 'http://localhost:8000/jobs/accept-offer',\n        headers: {\n          Authorization: 'Bearer ' + localStorage.authToken\n        },\n        data: {\n          vendor_offer: vendorOfferID\n        }\n      }).then(response => {\n        console.log(response);\n      }).catch(error => {\n        if (error.response) {\n          // Request made and server responded\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log('Error', error.message);\n        }\n      });\n    };\n\n    this.componentDidUpdate = prevProps => {\n      //prevProps is the previous props of the component before being updated\n      //so, if this.props != prevProps it means that component props have been updated\n      if (this.props.show && !prevProps.show) {\n        this.setState({\n          show: this.props.show\n        });\n      }\n    };\n\n    this.componentDidMount = () => {\n      this.gatherJsx(); //make an API call here with the printJobID to get the appropriate job detail data\n    };\n\n    this.decrementJsxIndex = () => {\n      this.setState(prevState => ({\n        jsxIndex: prevState.jsxIndex - 1\n      }));\n    };\n\n    this.incrementJsxIndex = () => {\n      this.setState(prevState => ({\n        jsxIndex: prevState.jsxIndex + 1\n      }));\n    };\n\n    this.props = props;\n    this.state = {\n      show: props.show,\n      printJobID: props.printJobID,\n      jsxIndex: 0,\n      jsx: []\n    };\n  }\n\n  async gatherJsx() {\n    let myJsx = []; //replace vendorOfferApiResult with an actual api call.\n    // let vendorOfferApiResult = config.vendorOffers;\n    // console.log(this.props);\n    // let vendorOfferApiResult = await getMyOffers();\n    // console.log('here ', vendorOfferApiResult[0].vendor_offers);\n    // vendorOfferApiResult[0].vendor_offers.forEach((vendorOffer) => {\n    //     myJsx.push(\n    //         <section className='custom-modal-jsx-section' key={vendorOffer.id}>\n    //             <div className='modal-general-header'>\n    //                 <span className='title'>\n    //                     {vendorOffer.vendor.first_name} {vendorOffer.vendor.last_name}\n    //                 </span>\n    //                 <span className='budget'>Offer: ${vendorOffer.bid}</span>\n    //             </div>\n    //             <div>\n    //                 <div className='jobDetails'>Details</div>\n    //                 <p className='detailsSection'>{vendorOffer.details}</p>\n    //             </div>\n    //             <div className='hire-button'>\n    //                 <UButton onClick={() => this.hire(vendorOffer.id)}>Hire</UButton>\n    //             </div>\n    //         </section>,\n    //     );\n    // });\n\n    this.setState({\n      jsx: myJsx\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: this.props.show,\n      className: \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      onClick: this.props.handleClose,\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, \"Job Details\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"modal-general-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames('modal-general-left-right', {\n        invisible: this.state.jsxIndex === 0\n      }),\n      onClick: this.decrementJsxIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(AiOutlineLeftCircle, {\n      className: \"modal-general-next-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }\n    })), this.state.jsx[this.state.jsxIndex], /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames('modal-general-left-right', {\n        invisible: this.state.jsxIndex === this.state.jsx.length - 1\n      }),\n      onClick: this.incrementJsxIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(AiOutlineRightCircle, {\n      className: \"modal-general-next-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"close-button-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(UButton, {\n      onClick: this.props.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }, \"Close\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/dillonharris/code/3DPrinterSharing-Web/src/components/Modals/ModalBids.js"],"names":["React","Modal","UButton","AiOutlineRightCircle","AiOutlineLeftCircle","classNames","axios","getMyOffers","ModalBids","Component","constructor","props","hire","vendorOfferID","handleClose","console","log","method","url","headers","Authorization","localStorage","authToken","data","vendor_offer","then","response","catch","error","status","request","message","componentDidUpdate","prevProps","show","setState","componentDidMount","gatherJsx","decrementJsxIndex","prevState","jsxIndex","incrementJsxIndex","state","printJobID","jsx","myJsx","render","invisible","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport UButton from '../utilities/UButton';\nimport {AiOutlineRightCircle, AiOutlineLeftCircle} from 'react-icons/ai';\nimport '../../style/Modal.css';\n// import config from '../../static/config';\nimport classNames from 'classnames';\nimport axios from 'axios';\n\nimport {getMyOffers} from '../../Backend';\n\nexport default class ModalBids extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props = props;\n        this.state = {\n            show: props.show,\n            printJobID: props.printJobID,\n            jsxIndex: 0,\n            jsx: [],\n        };\n    }\n\n    hire = (vendorOfferID) => {\n        this.props.handleClose();\n        console.log('hiring person with vendorOffer: ', vendorOfferID);\n        //MAKE API CALL TO HIRE THIS PERSON\n        axios({\n            method: 'post',\n            url: 'http://localhost:8000/jobs/accept-offer',\n            headers: {\n                Authorization: 'Bearer ' + localStorage.authToken,\n            },\n            data: {\n                vendor_offer: vendorOfferID,\n            },\n        })\n            .then((response) => {\n                console.log(response);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    // Request made and server responded\n                    console.log(error.response.data);\n                    console.log(error.response.status);\n                    console.log(error.response.headers);\n                } else if (error.request) {\n                    // The request was made but no response was received\n                    console.log(error.request);\n                } else {\n                    // Something happened in setting up the request that triggered an Error\n                    console.log('Error', error.message);\n                }\n            });\n    };\n\n    async gatherJsx() {\n        let myJsx = [];\n        //replace vendorOfferApiResult with an actual api call.\n        // let vendorOfferApiResult = config.vendorOffers;\n        // console.log(this.props);\n        // let vendorOfferApiResult = await getMyOffers();\n        // console.log('here ', vendorOfferApiResult[0].vendor_offers);\n        // vendorOfferApiResult[0].vendor_offers.forEach((vendorOffer) => {\n        //     myJsx.push(\n        //         <section className='custom-modal-jsx-section' key={vendorOffer.id}>\n        //             <div className='modal-general-header'>\n        //                 <span className='title'>\n        //                     {vendorOffer.vendor.first_name} {vendorOffer.vendor.last_name}\n        //                 </span>\n        //                 <span className='budget'>Offer: ${vendorOffer.bid}</span>\n        //             </div>\n        //             <div>\n        //                 <div className='jobDetails'>Details</div>\n        //                 <p className='detailsSection'>{vendorOffer.details}</p>\n        //             </div>\n        //             <div className='hire-button'>\n        //                 <UButton onClick={() => this.hire(vendorOffer.id)}>Hire</UButton>\n        //             </div>\n        //         </section>,\n        //     );\n        // });\n        this.setState({jsx: myJsx});\n    }\n\n    componentDidUpdate = (prevProps) => {\n        //prevProps is the previous props of the component before being updated\n        //so, if this.props != prevProps it means that component props have been updated\n        if (this.props.show && !prevProps.show) {\n            this.setState({show: this.props.show});\n        }\n    };\n\n    componentDidMount = () => {\n        this.gatherJsx();\n        //make an API call here with the printJobID to get the appropriate job detail data\n    };\n\n    decrementJsxIndex = () => {\n        this.setState((prevState) => ({\n            jsxIndex: prevState.jsxIndex - 1,\n        }));\n    };\n\n    incrementJsxIndex = () => {\n        this.setState((prevState) => ({\n            jsxIndex: prevState.jsxIndex + 1,\n        }));\n    };\n\n    render() {\n        return (\n            <Modal show={this.props.show} className='modal'>\n                <Modal.Header onClick={this.props.handleClose} closeButton>\n                    <Modal.Title>Job Details</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <section className='modal-general-section'>\n                        <span\n                            className={classNames('modal-general-left-right', {\n                                invisible: this.state.jsxIndex === 0,\n                            })}\n                            onClick={this.decrementJsxIndex}>\n                            <AiOutlineLeftCircle className='modal-general-next-buttons' />\n                        </span>\n                        {this.state.jsx[this.state.jsxIndex]}\n                        <span\n                            className={classNames('modal-general-left-right', {\n                                invisible: this.state.jsxIndex === this.state.jsx.length - 1,\n                            })}\n                            onClick={this.incrementJsxIndex}>\n                            <AiOutlineRightCircle className='modal-general-next-buttons' />\n                        </span>\n                    </section>\n                </Modal.Body>\n                <Modal.Footer>\n                    <div className='close-button-wrapper'>\n                        <UButton onClick={this.props.handleClose}>Close</UButton>\n                    </div>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}