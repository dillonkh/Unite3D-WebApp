{"ast":null,"code":"var _jsxFileName = \"/Users/dillonharris/code/3DPrinterSharing-Web/src/components/Modals/ModalMakeBid.js\";\nimport React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { AiOutlineRightCircle, AiOutlineLeftCircle } from 'react-icons/ai';\nimport '../../style/Modal.css';\nimport classNames from 'classnames';\nimport { makeBid } from '../../Backend';\nimport UTextArea from '../../components/utilities/UTextArea';\nexport default class ModalMakeBid extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        offer: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      makeBid(this.state.offer, this.state.printJobID, this.state.details);\n      this.props.handleClose();\n    };\n\n    this.gatherJsx = () => {\n      let myJsx = [];\n      let dimensions = `DIM: ${this.props.model.print_dimension_x} x ${this.props.model.print_dimension_y} x ${this.props.model.print_dimension_z} ${this.props.model.dimension_unit}`;\n      myJsx.push( /*#__PURE__*/React.createElement(\"section\", {\n        className: \"custom-modal-jsx-section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-general-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, this.props.model.name), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"budget\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, \"Budget: $\", this.props.model.budget)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-general-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"jobDetails\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }, \"Job Details\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"detailGrid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"subtitle filament\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }\n      }, \"Filament\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filament-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      }, this.props.model.filament), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"subtitle fill-model\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      }, \"Fill\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fill-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      }, this.props.model.fill, \"%\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"subtitle dimension\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }\n      }, \"Dimensions\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dim-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }\n      }, dimensions))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"jobDetails\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, \"Details\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"detailsSection\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, this.props.model.details))));\n      this.props.model.additional_images.forEach(image => {\n        myJsx.push( /*#__PURE__*/React.createElement(\"section\", {\n          className: \"custom-modal-jsx-section\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"image\",\n          alt: \"\",\n          src: image.image,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }\n        })));\n      });\n      this.setState({\n        jsx: myJsx\n      });\n    };\n\n    this.componentDidUpdate = prevProps => {\n      //prevProps is the previous props of the component before being updated\n      //so, if this.props != prevProps it means that component props have been updated\n      if (this.props.show && !prevProps.show) {\n        this.setState({\n          show: this.props.show\n        });\n      }\n    };\n\n    this.componentDidMount = () => {\n      this.gatherJsx(); //make an API call here with the printJobID to get the appropriate job detail data\n    };\n\n    this.decrementJsxIndex = () => {\n      this.setState(prevState => ({\n        jsxIndex: prevState.jsxIndex - 1\n      }));\n    };\n\n    this.incrementJsxIndex = () => {\n      this.setState(prevState => ({\n        jsxIndex: prevState.jsxIndex + 1\n      }));\n    };\n\n    this.props = props;\n    this.state = {\n      show: props.show,\n      printJobID: props.printJobID,\n      jsxIndex: 0,\n      jsx: [],\n      offer: 0,\n      details: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: this.props.show,\n      className: \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      onClick: this.props.handleClose,\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, \"Job Details\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"modal-general-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames('modal-general-left-right', {\n        invisible: this.state.jsxIndex === 0\n      }),\n      onClick: this.decrementJsxIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(AiOutlineLeftCircle, {\n      className: \"modal-general-next-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    })), this.state.jsx[this.state.jsxIndex], /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames('modal-general-left-right', {\n        invisible: this.state.jsxIndex === this.state.jsx.length - 1\n      }),\n      onClick: this.incrementJsxIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(AiOutlineRightCircle, {\n      className: \"modal-general-next-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"bid-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(UTextArea, {\n      value: this.state.details,\n      onChange: e => {\n        this.setState({\n          details: e.target.value\n        });\n      },\n      placeholder: \"Details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"make-offer-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, \"Make an offer: $\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.offer,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"form-submit-bid\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, \"Make Offer\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/dillonharris/code/3DPrinterSharing-Web/src/components/Modals/ModalMakeBid.js"],"names":["React","Modal","AiOutlineRightCircle","AiOutlineLeftCircle","classNames","makeBid","UTextArea","ModalMakeBid","Component","constructor","props","handleChange","event","setState","offer","target","value","handleSubmit","preventDefault","state","printJobID","details","handleClose","gatherJsx","myJsx","dimensions","model","print_dimension_x","print_dimension_y","print_dimension_z","dimension_unit","push","name","budget","filament","fill","additional_images","forEach","image","jsx","componentDidUpdate","prevProps","show","componentDidMount","decrementJsxIndex","prevState","jsxIndex","incrementJsxIndex","render","invisible","length","e"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport {AiOutlineRightCircle, AiOutlineLeftCircle} from 'react-icons/ai';\nimport '../../style/Modal.css';\nimport classNames from 'classnames';\nimport {makeBid} from '../../Backend';\nimport UTextArea from '../../components/utilities/UTextArea';\n\nexport default class ModalMakeBid extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props = props;\n        this.state = {\n            show: props.show,\n            printJobID: props.printJobID,\n            jsxIndex: 0,\n            jsx: [],\n            offer: 0,\n            details: '',\n        };\n    }\n\n    handleChange = (event) => {\n        this.setState({offer: event.target.value});\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        makeBid(this.state.offer, this.state.printJobID, this.state.details);\n        this.props.handleClose();\n    };\n\n    // This function will call our api that returns the details, the primary image, and then an array of images.\n    gatherJsx = () => {\n        let myJsx = [];\n        let dimensions = `DIM: ${this.props.model.print_dimension_x} x ${this.props.model.print_dimension_y} x ${this.props.model.print_dimension_z} ${this.props.model.dimension_unit}`;\n        myJsx.push(\n            <section className='custom-modal-jsx-section'>\n                <div className='modal-general-header'>\n                    <span className='title'>{this.props.model.name}</span>\n                    <span className='budget'>Budget: ${this.props.model.budget}</span>\n                </div>\n                <div className='modal-general-details'>\n                    <h4 className='jobDetails'>Job Details</h4>\n                    <div className='detailGrid'>\n                        <div className='subtitle filament'>Filament</div>\n                        <div className='filament-details'>{this.props.model.filament}</div>\n                        <div className='subtitle fill-model'>Fill</div>\n                        <div className='fill-details'>{this.props.model.fill}%</div>\n                        <div className='subtitle dimension'>Dimensions</div>\n                        <div className='dim-details'>{dimensions}</div>\n                    </div>\n                </div>\n                <div>\n                    <div className='jobDetails'>Details</div>\n                    <p className='detailsSection'>{this.props.model.details}</p>\n                </div>\n            </section>,\n        );\n        this.props.model.additional_images.forEach((image) => {\n            myJsx.push(\n                <section className='custom-modal-jsx-section'>\n                    <img className='image' alt='' src={image.image} />\n                </section>,\n            );\n        });\n        this.setState({jsx: myJsx});\n    };\n\n    componentDidUpdate = (prevProps) => {\n        //prevProps is the previous props of the component before being updated\n        //so, if this.props != prevProps it means that component props have been updated\n        if (this.props.show && !prevProps.show) {\n            this.setState({show: this.props.show});\n        }\n    };\n\n    componentDidMount = () => {\n        this.gatherJsx();\n        //make an API call here with the printJobID to get the appropriate job detail data\n    };\n\n    decrementJsxIndex = () => {\n        this.setState((prevState) => ({\n            jsxIndex: prevState.jsxIndex - 1,\n        }));\n    };\n\n    incrementJsxIndex = () => {\n        this.setState((prevState) => ({\n            jsxIndex: prevState.jsxIndex + 1,\n        }));\n    };\n\n    render() {\n        return (\n            <Modal show={this.props.show} className='modal'>\n                <Modal.Header onClick={this.props.handleClose} closeButton>\n                    <Modal.Title>Job Details</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <section className='modal-general-section'>\n                        <span\n                            className={classNames('modal-general-left-right', {\n                                invisible: this.state.jsxIndex === 0,\n                            })}\n                            onClick={this.decrementJsxIndex}>\n                            <AiOutlineLeftCircle className='modal-general-next-buttons' />\n                        </span>\n                        {this.state.jsx[this.state.jsxIndex]}\n                        <span\n                            className={classNames('modal-general-left-right', {\n                                invisible: this.state.jsxIndex === this.state.jsx.length - 1,\n                            })}\n                            onClick={this.incrementJsxIndex}>\n                            <AiOutlineRightCircle className='modal-general-next-buttons' />\n                        </span>\n                    </section>\n                </Modal.Body>\n                <Modal.Footer>\n                    <form className='bid-form' onSubmit={this.handleSubmit}>\n                        <UTextArea\n                            value={this.state.details}\n                            onChange={(e) => {\n                                this.setState({details: e.target.value});\n                            }}\n                            placeholder='Details'></UTextArea>\n                        <label className='make-offer-text'>\n                            Make an offer: $\n                            <input type='number' value={this.state.offer} onChange={this.handleChange} />\n                        </label>\n\n                        <button className='form-submit-bid' type='submit'>\n                            Make Offer\n                        </button>\n                    </form>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}