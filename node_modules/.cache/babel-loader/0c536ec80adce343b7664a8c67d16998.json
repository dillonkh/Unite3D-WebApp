{"ast":null,"code":"var _jsxFileName = \"/Users/dillonharris/code/3DPrinterSharing-Web/src/components/BrowsingManager.js\";\nimport React from 'react';\nimport BrowsingNav from './BrowsingNav';\nimport ImageCard from './ImageCard';\nimport '../style/Browsing.css';\nimport { getMyModels, getMyOffers, getMyJobsInProgress, getMyCompletedPrints, getNewJobs, getMyBids, getCurrentJobs, getPastJobs } from '../Backend';\nexport default class BrowsingManger extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNavClick = navItem => {\n      this.setState({\n        selectedApi: navItem.api\n      }, this.gatherModels // callback.. notice it doesn't have the () because we're not executing it, we're passing it in.\n      );\n    };\n\n    let modelerNavItems = [{\n      title: 'Models',\n      api: getMyModels\n    }, {\n      title: 'My Offers',\n      api: getMyOffers\n    }, {\n      title: 'Jobs In Progress',\n      api: getMyJobsInProgress\n    }, {\n      title: 'Completed Prints',\n      api: getMyCompletedPrints\n    }];\n    let vendorNavItems = [{\n      title: 'New Jobs',\n      api: getNewJobs\n    }, {\n      title: 'My Bids',\n      api: getMyBids\n    }, {\n      title: 'Current Jobs',\n      api: getCurrentJobs\n    }, {\n      title: 'Past Jobs',\n      api: getPastJobs\n    }];\n    this.state = {\n      imageCards: [],\n      selectedNavigation: '',\n      selectedApi: props.iAmModeler ? getMyModels : getNewJobs,\n      navItems: props.iAmModeler ? modelerNavItems : vendorNavItems\n    };\n  }\n\n  componentDidMount() {\n    this.gatherModels();\n  }\n\n  gatherModels() {\n    let modelInfo = this.state.selectedApi();\n    let imageCards = [];\n    modelInfo.forEach(model => {\n      imageCards.push( /*#__PURE__*/React.createElement(ImageCard, {\n        model: model,\n        key: model.printJobID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }\n      }));\n    });\n    this.setState({\n      imageCards: imageCards\n    });\n  }\n\n  render() {\n    if (!this.state.imageCards.length) {\n      return /*#__PURE__*/React.createElement(BrowsingNav, {\n        className: \"browsing-nav\",\n        navItems: this.state.navItems,\n        handleClick: this.handleNavClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BrowsingNav, {\n      className: \"browsing-nav\",\n      navItems: this.state.navItems,\n      handleClick: this.handleNavClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"browsing-grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, this.state.imageCards));\n  }\n\n}","map":{"version":3,"sources":["/Users/dillonharris/code/3DPrinterSharing-Web/src/components/BrowsingManager.js"],"names":["React","BrowsingNav","ImageCard","getMyModels","getMyOffers","getMyJobsInProgress","getMyCompletedPrints","getNewJobs","getMyBids","getCurrentJobs","getPastJobs","BrowsingManger","Component","constructor","props","handleNavClick","navItem","setState","selectedApi","api","gatherModels","modelerNavItems","title","vendorNavItems","state","imageCards","selectedNavigation","iAmModeler","navItems","componentDidMount","modelInfo","forEach","model","push","printJobID","render","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport BrowsingNav from './BrowsingNav';\nimport ImageCard from './ImageCard';\nimport '../style/Browsing.css';\nimport {\n    getMyModels,\n    getMyOffers,\n    getMyJobsInProgress,\n    getMyCompletedPrints,\n    getNewJobs,\n    getMyBids,\n    getCurrentJobs,\n    getPastJobs,\n} from '../Backend';\n\nexport default class BrowsingManger extends React.Component {\n    constructor(props) {\n        super(props);\n        let modelerNavItems = [\n            {\n                title: 'Models',\n                api: getMyModels,\n            },\n            {\n                title: 'My Offers',\n                api: getMyOffers,\n            },\n            {\n                title: 'Jobs In Progress',\n                api: getMyJobsInProgress,\n            },\n            {\n                title: 'Completed Prints',\n                api: getMyCompletedPrints,\n            },\n        ];\n\n        let vendorNavItems = [\n            {\n                title: 'New Jobs',\n                api: getNewJobs,\n            },\n            {\n                title: 'My Bids',\n                api: getMyBids,\n            },\n            {\n                title: 'Current Jobs',\n                api: getCurrentJobs,\n            },\n            {\n                title: 'Past Jobs',\n                api: getPastJobs,\n            },\n        ];\n\n        this.state = {\n            imageCards: [],\n            selectedNavigation: '',\n            selectedApi: props.iAmModeler ? getMyModels : getNewJobs,\n            navItems: props.iAmModeler ? modelerNavItems : vendorNavItems,\n        };\n    }\n\n    componentDidMount() {\n        this.gatherModels();\n    }\n\n    gatherModels() {\n        let modelInfo = this.state.selectedApi();\n        let imageCards = [];\n        modelInfo.forEach((model) => {\n            imageCards.push(<ImageCard model={model} key={model.printJobID} />);\n        });\n        this.setState({imageCards: imageCards});\n    }\n\n    handleNavClick = (navItem) => {\n        this.setState(\n            {\n                selectedApi: navItem.api,\n            },\n            this.gatherModels, // callback.. notice it doesn't have the () because we're not executing it, we're passing it in.\n        );\n    };\n\n    render() {\n        if (!this.state.imageCards.length) {\n            return (\n                <BrowsingNav\n                    className='browsing-nav'\n                    navItems={this.state.navItems}\n                    handleClick={this.handleNavClick}\n                />\n            );\n        }\n        return (\n            <div>\n                <BrowsingNav\n                    className='browsing-nav'\n                    navItems={this.state.navItems}\n                    handleClick={this.handleNavClick}\n                />\n                <section className='browsing-grid'>{this.state.imageCards}</section>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}