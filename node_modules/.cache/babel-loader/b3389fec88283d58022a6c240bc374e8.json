{"ast":null,"code":"var _jsxFileName = \"/Users/dillonharris/code/3DPrinterSharing-Web/src/components/UButton.js\";\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport './../style/UStyle.css';\nexport default class UButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actionBlink: false,\n      signInBlink: false,\n      disabled: this.disabled\n    };\n    this.content = props.content;\n    this.variant = props.variant;\n    this.size = props.size; // this.disabled = props.disabled\n\n    this.centered = props.centered;\n  }\n\n  click() {\n    if (!this.variant.includes('sign')) {\n      this.setState({\n        actionBlink: true\n      });\n    } else {\n      this.setState({\n        signInBlink: true\n      });\n    }\n  }\n\n  animationEnded() {\n    if (!this.variant.includes('sign')) {\n      this.setState({\n        actionBlink: false\n      });\n    } else {\n      this.setState({\n        signInBlink: false\n      });\n    }\n  }\n\n  render() {\n    let classes = `\n      ${this.centered ? 'centered' : ''} \n      ${this.state.actionBlink ? 'action-blink' : ''}\n      ${this.state.signInBlink ? 'sign-in-blink' : ''}\n    `;\n    return /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.click(),\n      onAnimationEnd: () => this.animationEnded(),\n      className: classes,\n      disabled: !this.state.disabled,\n      size: this.size,\n      variant: this.variant,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, this.content);\n  }\n\n}","map":{"version":3,"sources":["/Users/dillonharris/code/3DPrinterSharing-Web/src/components/UButton.js"],"names":["React","Button","UButton","Component","constructor","props","state","actionBlink","signInBlink","disabled","content","variant","size","centered","click","includes","setState","animationEnded","render","classes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,uBAAP;AAGA,eAAe,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,KADF;AAEXC,MAAAA,WAAW,EAAE,KAFF;AAGXC,MAAAA,QAAQ,EAAE,KAAKA;AAHJ,KAAb;AAMA,SAAKC,OAAL,GAAeL,KAAK,CAACK,OAArB;AACA,SAAKC,OAAL,GAAeN,KAAK,CAACM,OAArB;AACA,SAAKC,IAAL,GAAYP,KAAK,CAACO,IAAlB,CAXiB,CAYjB;;AACA,SAAKC,QAAL,GAAgBR,KAAK,CAACQ,QAAtB;AACD;;AAEDC,EAAAA,KAAK,GAAI;AACP,QAAI,CAAC,KAAKH,OAAL,CAAaI,QAAb,CAAsB,MAAtB,CAAL,EAAoC;AAClC,WAAKC,QAAL,CAAc;AAAET,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD,KAFD,MAEO;AACL,WAAKS,QAAL,CAAc;AAAER,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD;AACF;;AACDS,EAAAA,cAAc,GAAI;AAChB,QAAI,CAAC,KAAKN,OAAL,CAAaI,QAAb,CAAsB,MAAtB,CAAL,EAAoC;AAClC,WAAKC,QAAL,CAAc;AAAET,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD,KAFD,MAEO;AACL,WAAKS,QAAL,CAAc;AAAER,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD;AACF;;AAEDU,EAAAA,MAAM,GAAG;AACP,QAAIC,OAAO,GAAI;QACX,KAAKN,QAAL,GAAgB,UAAhB,GAA6B,EAAG;QAChC,KAAKP,KAAL,CAAWC,WAAX,GAAyB,cAAzB,GAA0C,EAAG;QAC7C,KAAKD,KAAL,CAAWE,WAAX,GAAyB,eAAzB,GAA2C,EAAG;KAHlD;AAKA,wBACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE,MAAM,KAAKM,KAAL,EADjB;AAEE,MAAA,cAAc,EAAE,MAAM,KAAKG,cAAL,EAFxB;AAGE,MAAA,SAAS,EAAEE,OAHb;AAIE,MAAA,QAAQ,EAAE,CAAC,KAAKb,KAAL,CAAWG,QAJxB;AAKE,MAAA,IAAI,EAAE,KAAKG,IALb;AAME,MAAA,OAAO,EAAE,KAAKD,OANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQG,KAAKD,OARR,CADF;AAYD;;AAlDkD","sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport './../style/UStyle.css'\n\n\nexport default class UButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      actionBlink: false,\n      signInBlink: false,\n      disabled: this.disabled\n    }\n\n    this.content = props.content\n    this.variant = props.variant\n    this.size = props.size\n    // this.disabled = props.disabled\n    this.centered = props.centered\n  }\n\n  click () {\n    if (!this.variant.includes('sign')) {\n      this.setState({ actionBlink: true })\n    } else {\n      this.setState({ signInBlink: true })\n    }\n  }\n  animationEnded () {\n    if (!this.variant.includes('sign')) {\n      this.setState({ actionBlink: false })\n    } else {\n      this.setState({ signInBlink: false })\n    }\n  }\n\n  render() {\n    let classes = `\n      ${this.centered ? 'centered' : ''} \n      ${this.state.actionBlink ? 'action-blink' : ''}\n      ${this.state.signInBlink ? 'sign-in-blink' : ''}\n    `\n    return (\n      <Button\n        onClick={() => this.click()}\n        onAnimationEnd={() => this.animationEnded()}\n        className={classes}\n        disabled={!this.state.disabled}\n        size={this.size}\n        variant={this.variant}\n      >\n        {this.content}\n      </Button>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}