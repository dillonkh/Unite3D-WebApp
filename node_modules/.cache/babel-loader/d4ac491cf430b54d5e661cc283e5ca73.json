{"ast":null,"code":"var _jsxFileName = \"/Users/dillonharris/code/3DPrinterSharing-Web/src/components/Modals/ModalJobDetails.js\";\nimport React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport UButton from '../utilities/UButton';\nimport { AiOutlineRightCircle, AiOutlineLeftCircle } from 'react-icons/ai';\nimport '../../style/Modal.css';\nimport classNames from 'classnames';\nimport AWS from 'aws-sdk';\nexport default class ModalJobDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.gatherJsx = () => {\n      let myJsx = [];\n      let details = 'The inspriation for this model comes from a classic video game that I loved to play' + \" I don't have lots of money so the whoever can give me the best bid gets it! I'm also open to changing\" + \" my filaments and fill percentage. I don't know a lot about 3D printing so whatever you think is best\" + \" sounds good to me so long as my model doesn't break while shipping\";\n      let dimensions = `DIM: ${this.props.model.print_dimension_x} x ${this.props.model.print_dimension_y} x ${this.props.model.print_dimension_z} ${this.props.model.dimension_unit}`;\n      myJsx.push( /*#__PURE__*/React.createElement(\"section\", {\n        className: \"custom-modal-jsx-section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-general-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      }, this.props.model.name), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"budget\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, \"Budget: $\", this.props.model.budget)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-general-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"jobDetails\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      }, \"Job Details\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"detailGrid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"subtitle filament\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }\n      }, \"Filament\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filament-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }\n      }, this.props.model.filament), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"subtitle fill-model\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      }, \"Fill\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fill-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      }, this.props.model.fill, \"%\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"subtitle dimension\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }\n      }, \"Dimensions\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dim-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }\n      }, dimensions))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"jobDetails\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, \"Details\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"detailsSection\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, details))));\n      this.props.model.additional_images.forEach(image => {\n        myJsx.push( /*#__PURE__*/React.createElement(\"section\", {\n          className: \"custom-modal-jsx-section\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"image\",\n          alt: \"\",\n          src: image.image,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }\n        })));\n      });\n      this.setState({\n        jsx: myJsx\n      });\n    };\n\n    this.componentDidUpdate = prevProps => {\n      //prevProps is the previous props of the component before being updated\n      //so, if this.props != prevProps it means that component props have been updated\n      if (this.props.show && !prevProps.show) {\n        this.setState({\n          show: this.props.show\n        });\n      }\n    };\n\n    this.componentDidMount = () => {\n      this.gatherJsx(); //make an API call here with the printJobID to get the appropriate job detail data\n    };\n\n    this.decrementJsxIndex = () => {\n      this.setState(prevState => ({\n        jsxIndex: prevState.jsxIndex - 1\n      }));\n    };\n\n    this.incrementJsxIndex = () => {\n      this.setState(prevState => ({\n        jsxIndex: prevState.jsxIndex + 1\n      }));\n    };\n\n    this.downloadFile = () => {\n      console.log('attempting to download file');\n      const S3 = new AWS.S3({\n        accessKeyId: process.env.REACT_APP_AWS_ID,\n        secretAccessKey: process.env.REACT_APP_AWS_SECRET,\n        region: process.env.REACT_APP_AWS_S3_REGION\n      }); // const fileName = 'https://unite3d.s3-us-west-2.amazonaws.com/models/cc2de204-c7d9-4e20-a0c6-f258c67750a6.dae';\n\n      const params = {\n        Bucket: process.env.REACT_APP_AWS_S3_BUCKET_NAME,\n        Key: 'cc2de204-c7d9-4e20-a0c6-f258c67750a6.dae'\n      };\n      s3.getObject(params, (err, data) => {\n        let blob = new Blob([data.Body], {\n          type: data.ContentType\n        });\n        let link = document.createElement('a');\n        link.href = window.URL.createObjectURL(blob);\n        link.download = url;\n        link.click();\n      });\n    };\n\n    this.props = props;\n    this.state = {\n      show: props.show,\n      printJobID: props.printJobID,\n      jsxIndex: 0,\n      jsx: []\n    };\n  } // This function will call our api that returns the details, the primary image, and then an array of images.\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: this.props.show,\n      className: \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      onClick: this.props.handleClose,\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, \"Job Details\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"modal-general-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames('modal-general-left-right', {\n        invisible: this.state.jsxIndex === 0\n      }),\n      onClick: this.decrementJsxIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(AiOutlineLeftCircle, {\n      className: \"modal-general-next-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    })), this.state.jsx[this.state.jsxIndex], /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames('modal-general-left-right', {\n        invisible: this.state.jsxIndex === this.state.jsx.length - 1\n      }),\n      onClick: this.incrementJsxIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(AiOutlineRightCircle, {\n      className: \"modal-general-next-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"close-button-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(UButton, {\n      onClick: this.props.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }, \"Close\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"download-button-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(UButton, {\n      onClick: this.downloadFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, \"Download Files\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/dillonharris/code/3DPrinterSharing-Web/src/components/Modals/ModalJobDetails.js"],"names":["React","Modal","UButton","AiOutlineRightCircle","AiOutlineLeftCircle","classNames","AWS","ModalJobDetails","Component","constructor","props","gatherJsx","myJsx","details","dimensions","model","print_dimension_x","print_dimension_y","print_dimension_z","dimension_unit","push","name","budget","filament","fill","additional_images","forEach","image","setState","jsx","componentDidUpdate","prevProps","show","componentDidMount","decrementJsxIndex","prevState","jsxIndex","incrementJsxIndex","downloadFile","console","log","S3","accessKeyId","process","env","REACT_APP_AWS_ID","secretAccessKey","REACT_APP_AWS_SECRET","region","REACT_APP_AWS_S3_REGION","params","Bucket","REACT_APP_AWS_S3_BUCKET_NAME","Key","s3","getObject","err","data","blob","Blob","Body","type","ContentType","link","document","createElement","href","window","URL","createObjectURL","download","url","click","state","printJobID","render","handleClose","invisible","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport UButton from '../utilities/UButton';\nimport {AiOutlineRightCircle, AiOutlineLeftCircle} from 'react-icons/ai';\nimport '../../style/Modal.css';\nimport classNames from 'classnames';\nimport AWS from 'aws-sdk';\n\nexport default class ModalJobDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props = props;\n        this.state = {\n            show: props.show,\n            printJobID: props.printJobID,\n            jsxIndex: 0,\n            jsx: [],\n        };\n    }\n\n    // This function will call our api that returns the details, the primary image, and then an array of images.\n    gatherJsx = () => {\n        let myJsx = [];\n        let details =\n            'The inspriation for this model comes from a classic video game that I loved to play' +\n            \" I don't have lots of money so the whoever can give me the best bid gets it! I'm also open to changing\" +\n            \" my filaments and fill percentage. I don't know a lot about 3D printing so whatever you think is best\" +\n            \" sounds good to me so long as my model doesn't break while shipping\";\n        let dimensions = `DIM: ${this.props.model.print_dimension_x} x ${this.props.model.print_dimension_y} x ${this.props.model.print_dimension_z} ${this.props.model.dimension_unit}`;\n        myJsx.push(\n            <section className='custom-modal-jsx-section'>\n                <div className='modal-general-header'>\n                    <span className='title'>{this.props.model.name}</span>\n                    <span className='budget'>Budget: ${this.props.model.budget}</span>\n                </div>\n                <div className='modal-general-details'>\n                    <h4 className='jobDetails'>Job Details</h4>\n                    <div className='detailGrid'>\n                        <div className='subtitle filament'>Filament</div>\n                        <div className='filament-details'>{this.props.model.filament}</div>\n                        <div className='subtitle fill-model'>Fill</div>\n                        <div className='fill-details'>{this.props.model.fill}%</div>\n                        <div className='subtitle dimension'>Dimensions</div>\n                        <div className='dim-details'>{dimensions}</div>\n                    </div>\n                </div>\n                <div>\n                    <div className='jobDetails'>Details</div>\n                    <p className='detailsSection'>{details}</p>\n                </div>\n            </section>,\n        );\n        this.props.model.additional_images.forEach((image) => {\n            myJsx.push(\n                <section className='custom-modal-jsx-section'>\n                    <img className='image' alt='' src={image.image} />\n                </section>,\n            );\n        });\n        this.setState({jsx: myJsx});\n    };\n\n    componentDidUpdate = (prevProps) => {\n        //prevProps is the previous props of the component before being updated\n        //so, if this.props != prevProps it means that component props have been updated\n        if (this.props.show && !prevProps.show) {\n            this.setState({show: this.props.show});\n        }\n    };\n\n    componentDidMount = () => {\n        this.gatherJsx();\n        //make an API call here with the printJobID to get the appropriate job detail data\n    };\n\n    decrementJsxIndex = () => {\n        this.setState((prevState) => ({\n            jsxIndex: prevState.jsxIndex - 1,\n        }));\n    };\n\n    incrementJsxIndex = () => {\n        this.setState((prevState) => ({\n            jsxIndex: prevState.jsxIndex + 1,\n        }));\n    };\n\n    downloadFile = () => {\n        console.log('attempting to download file');\n        const S3 = new AWS.S3({\n            accessKeyId: process.env.REACT_APP_AWS_ID,\n            secretAccessKey: process.env.REACT_APP_AWS_SECRET,\n            region: process.env.REACT_APP_AWS_S3_REGION,\n        });\n        // const fileName = 'https://unite3d.s3-us-west-2.amazonaws.com/models/cc2de204-c7d9-4e20-a0c6-f258c67750a6.dae';\n        const params = {\n            Bucket: process.env.REACT_APP_AWS_S3_BUCKET_NAME,\n            Key: 'cc2de204-c7d9-4e20-a0c6-f258c67750a6.dae',\n        };\n\n        s3.getObject(params, (err, data) => {\n            let blob = new Blob([data.Body], {type: data.ContentType});\n            let link = document.createElement('a');\n            link.href = window.URL.createObjectURL(blob);\n            link.download = url;\n            link.click();\n        });\n    };\n\n    render() {\n        return (\n            <Modal show={this.props.show} className='modal'>\n                <Modal.Header onClick={this.props.handleClose} closeButton>\n                    <Modal.Title>Job Details</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <section className='modal-general-section'>\n                        <span\n                            className={classNames('modal-general-left-right', {\n                                invisible: this.state.jsxIndex === 0,\n                            })}\n                            onClick={this.decrementJsxIndex}>\n                            <AiOutlineLeftCircle className='modal-general-next-buttons' />\n                        </span>\n                        {this.state.jsx[this.state.jsxIndex]}\n                        <span\n                            className={classNames('modal-general-left-right', {\n                                invisible: this.state.jsxIndex === this.state.jsx.length - 1,\n                            })}\n                            onClick={this.incrementJsxIndex}>\n                            <AiOutlineRightCircle className='modal-general-next-buttons' />\n                        </span>\n                    </section>\n                </Modal.Body>\n                <Modal.Footer>\n                    <div className='close-button-wrapper'>\n                        <UButton onClick={this.props.handleClose}>Close</UButton>\n                    </div>\n                    <div className='download-button-wrapper'>\n                        <UButton onClick={this.downloadFile}>Download Files</UButton>\n                    </div>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}