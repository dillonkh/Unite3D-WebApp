{"ast":null,"code":"var _jsxFileName = \"/Users/dillonharris/code/3DPrinterSharing-Web/src/components/BrowsingManager.js\";\nimport React from 'react';\nimport BrowsingNav from './BrowsingNav';\nimport ImageCard from './ImageCard';\nimport '../style/Browsing.css';\nimport { withRouter } from 'react-router-dom';\nimport { urls } from './Main';\nimport { getMyModels, getMyOffers, getMyJobsInProgress, getMyCompletedPrints, getNewJobs, getMyBids, getCurrentJobs, getPastJobs } from '../Backend';\n\nclass BrowsingManger extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNavClick = navItem => {\n      this.setState({\n        selectedNavItem: navItem\n      }, this.gatherModels // callback.. notice it doesn't have the () because we're not executing it, we're passing it in.\n      );\n    };\n\n    if (!localStorage.authToken) {\n      props.history.push(urls.login);\n    }\n\n    let modelerNavItems = [{\n      title: 'Models',\n      api: getMyModels\n    }, {\n      title: 'My Offers',\n      api: getMyOffers\n    }, {\n      title: 'Jobs In Progress',\n      api: getMyJobsInProgress\n    }, {\n      title: 'Completed Prints',\n      api: getMyCompletedPrints\n    }];\n    let vendorNavItems = [{\n      title: 'New Jobs',\n      api: getNewJobs\n    }, {\n      title: 'My Bids',\n      api: getMyBids\n    }, {\n      title: 'Current Jobs',\n      api: getCurrentJobs\n    }, {\n      title: 'Past Jobs',\n      api: getPastJobs\n    }];\n    this.state = {\n      imageCards: [],\n      selectedNavItem: props.iAmModeler ? modelerNavItems[0] : vendorNavItems[0],\n      navItems: props.iAmModeler ? modelerNavItems : vendorNavItems\n    };\n  }\n\n  async componentDidMount() {\n    let user = await refreshJWT();\n    console.log('user: ', user);\n\n    if (user.is_vendor) {\n      // push vendor nav items\n      this.props.pushNavItems(true);\n      console.log('setting state to vendorNavItems');\n      this.setState({\n        selectedNavItem: this.vendorNavItems[0],\n        navItems: this.vendorNavItems\n      }, (await this.gatherModels));\n      console.log('settingState is executing');\n    } else {\n      // push modeler nav items\n      this.props.pushNavItems(false);\n      console.log('setting state to modelerNavItems');\n      this.setState({\n        selectedNavItem: this.modelerNavItems[0],\n        navItems: this.modelerNavItems\n      }, (await this.gatherModels));\n      console.log('settingState is executing');\n    }\n  }\n\n  gatherModels() {\n    let modelInfo = this.state.selectedNavItem.api();\n    let imageCards = [];\n    modelInfo.forEach(model => {\n      imageCards.push( /*#__PURE__*/React.createElement(ImageCard, {\n        selectedNavigation: this.state.selectedNavItem,\n        model: model,\n        key: model.printJobID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }));\n    });\n    this.setState({\n      imageCards: imageCards\n    });\n  }\n\n  render() {\n    if (!this.state.imageCards.length) {\n      return /*#__PURE__*/React.createElement(BrowsingNav, {\n        className: \"browsing-nav\",\n        navItems: this.state.navItems,\n        handleClick: this.handleNavClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BrowsingNav, {\n      className: \"browsing-nav\",\n      navItems: this.state.navItems,\n      handleClick: this.handleNavClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"browsing-grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, this.state.imageCards));\n  }\n\n}\n\nexport default withRouter(BrowsingManger);","map":{"version":3,"sources":["/Users/dillonharris/code/3DPrinterSharing-Web/src/components/BrowsingManager.js"],"names":["React","BrowsingNav","ImageCard","withRouter","urls","getMyModels","getMyOffers","getMyJobsInProgress","getMyCompletedPrints","getNewJobs","getMyBids","getCurrentJobs","getPastJobs","BrowsingManger","Component","constructor","props","handleNavClick","navItem","setState","selectedNavItem","gatherModels","localStorage","authToken","history","push","login","modelerNavItems","title","api","vendorNavItems","state","imageCards","iAmModeler","navItems","componentDidMount","user","refreshJWT","console","log","is_vendor","pushNavItems","modelInfo","forEach","model","printJobID","render","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport BrowsingNav from './BrowsingNav';\nimport ImageCard from './ImageCard';\nimport '../style/Browsing.css';\nimport {withRouter} from 'react-router-dom';\nimport {urls} from './Main';\n\nimport {\n    getMyModels,\n    getMyOffers,\n    getMyJobsInProgress,\n    getMyCompletedPrints,\n    getNewJobs,\n    getMyBids,\n    getCurrentJobs,\n    getPastJobs,\n} from '../Backend';\n\nclass BrowsingManger extends React.Component {\n    constructor(props) {\n        super(props);\n        if (!localStorage.authToken) {\n            props.history.push(urls.login);\n        }\n        let modelerNavItems = [\n            {\n                title: 'Models',\n                api: getMyModels,\n            },\n            {\n                title: 'My Offers',\n                api: getMyOffers,\n            },\n            {\n                title: 'Jobs In Progress',\n                api: getMyJobsInProgress,\n            },\n            {\n                title: 'Completed Prints',\n                api: getMyCompletedPrints,\n            },\n        ];\n\n        let vendorNavItems = [\n            {\n                title: 'New Jobs',\n                api: getNewJobs,\n            },\n            {\n                title: 'My Bids',\n                api: getMyBids,\n            },\n            {\n                title: 'Current Jobs',\n                api: getCurrentJobs,\n            },\n            {\n                title: 'Past Jobs',\n                api: getPastJobs,\n            },\n        ];\n\n        this.state = {\n            imageCards: [],\n            selectedNavItem: props.iAmModeler ? modelerNavItems[0] : vendorNavItems[0],\n            navItems: props.iAmModeler ? modelerNavItems : vendorNavItems,\n        };\n    }\n\n    async componentDidMount() {\n        let user = await refreshJWT();\n        console.log('user: ', user);\n        if (user.is_vendor) {\n            // push vendor nav items\n            this.props.pushNavItems(true);\n            console.log('setting state to vendorNavItems');\n            this.setState(\n                {\n                    selectedNavItem: this.vendorNavItems[0],\n                    navItems: this.vendorNavItems,\n                },\n                await this.gatherModels,\n            );\n            console.log('settingState is executing');\n        } else {\n            // push modeler nav items\n            this.props.pushNavItems(false);\n            console.log('setting state to modelerNavItems');\n            this.setState(\n                {\n                    selectedNavItem: this.modelerNavItems[0],\n                    navItems: this.modelerNavItems,\n                },\n                await this.gatherModels,\n            );\n            console.log('settingState is executing');\n        }\n    }\n\n    gatherModels() {\n        let modelInfo = this.state.selectedNavItem.api();\n        let imageCards = [];\n        modelInfo.forEach((model) => {\n            imageCards.push(\n                <ImageCard selectedNavigation={this.state.selectedNavItem} model={model} key={model.printJobID} />,\n            );\n        });\n        this.setState({imageCards: imageCards});\n    }\n\n    handleNavClick = (navItem) => {\n        this.setState(\n            {\n                selectedNavItem: navItem,\n            },\n            this.gatherModels, // callback.. notice it doesn't have the () because we're not executing it, we're passing it in.\n        );\n    };\n\n    render() {\n        if (!this.state.imageCards.length) {\n            return (\n                <BrowsingNav\n                    className='browsing-nav'\n                    navItems={this.state.navItems}\n                    handleClick={this.handleNavClick}\n                />\n            );\n        }\n        return (\n            <div>\n                <BrowsingNav\n                    className='browsing-nav'\n                    navItems={this.state.navItems}\n                    handleClick={this.handleNavClick}\n                />\n                <section className='browsing-grid'>{this.state.imageCards}</section>\n            </div>\n        );\n    }\n}\nexport default withRouter(BrowsingManger);\n"]},"metadata":{},"sourceType":"module"}