{"ast":null,"code":"var _jsxFileName = \"/Users/dillonharris/code/3DPrinterSharing-Web/src/components/CreateAccount.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Page from './utilities/Page';\nimport ULogo from './utilities/ULogo';\nimport UTextInput from './utilities/UTextInput';\nimport UButton from './utilities/UButton';\nimport './../style/LoginStyle.css';\nimport ULink from './utilities/ULink';\nimport MultiSelect from 'react-multi-select-component'; // https://www.npmjs.com/package/react-multi-select-component\n\nimport config from './../static/config';\nimport UDimensionsModal from './utilities/UDimensionsModal';\nexport default class CreateAccount extends React.Component {\n  constructor(props) {\n    super(props);\n    this.terms = /*#__PURE__*/React.createElement(ULink, {\n      to: \"/terms-of-service\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 14\n      }\n    }, \"Terms of Service\");\n\n    this.signUp = () => {\n      axios({\n        method: 'post',\n        url: 'http://localhost:8000/user/register',\n        data: {\n          email: this.state.email,\n          password: this.state.password,\n          first_name: this.state.firstName,\n          last_name: this.state.lastName,\n          isVendor: this.state.isVendor\n        }\n      }).then(response => {\n        this.setState({\n          token: response.data.token\n        }, () => {\n          if (this.state.isVendor) {\n            this.registerPrinter();\n          }\n        });\n      });\n    };\n\n    this.materials = config.materials;\n\n    this.handleShow = () => {\n      this.setState({\n        show: true\n      });\n      document.activeElement.blur();\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        show: false\n      });\n      this.changeDimensions();\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      firstName: '',\n      lastName: '',\n      isVendor: false,\n      token: '',\n      selectedFilaments: [],\n      printerMake: '',\n      printerModel: '',\n      show: false,\n      dimensions: '',\n      xDim: '',\n      yDim: '',\n      zDim: '',\n      selectedUnits: ''\n    }; // this.setState({email: 'newemail'}, () => {})\n    //this.state.email\n  }\n\n  registerPrinter() {\n    let userId = '';\n    axios({\n      method: 'post',\n      url: 'http://localhost:8000/user/verify',\n      data: {\n        token: this.state.token\n      }\n    }).then(response => {\n      userId = response.data.user.id;\n    });\n\n    if (userId) {\n      axios({\n        method: 'post',\n        url: 'http://localhost:8000/printer/register',\n        data: {\n          vendor: userId,\n          make: this.state.printerMake,\n          model: this.state.printerModel,\n          filaments: this.state.selectedFilaments,\n          printDimensionX: this.state.xDim,\n          printDimensionY: this.state.yDim,\n          printDimensionZ: this.state.zDim,\n          dimensionUnit: this.state.selectedUnits\n        }\n      }).then(response => {\n        alert('TODO: this endpoint has not been made/tested');\n      }).catch(err => {\n        alert('TODO: this endpoint has not been made/tested');\n      });\n    }\n  }\n\n  options() {\n    let op = [];\n\n    for (let i = 0; i < this.materials.length - 1; i++) {\n      op.push({\n        label: this.materials[i],\n        value: this.materials[i]\n      });\n    }\n\n    return op;\n  }\n\n  getPrinterRegistrationForm() {\n    if (this.state.isVendor) {\n      return /*#__PURE__*/React.createElement(Row, {\n        width: \"100%\",\n        className: \"mx-0 mb-3 width-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"register-printer-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }\n      }, \"Register Printer\"), /*#__PURE__*/React.createElement(UTextInput, {\n        value: this.state.printerMake,\n        onChange: e => this.setState({\n          printerMake: e.target.value\n        }),\n        onClick: () => {},\n        placeholder: \"Make\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(UTextInput, {\n        value: this.state.printerModel,\n        onChange: e => this.setState({\n          printerModel: e.taget.value\n        }),\n        onClick: () => {},\n        placeholder: \"Model\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(UTextInput, {\n        value: this.state.modalData.dimensions,\n        onChange: () => {},\n        onClick: () => this.handleShow(),\n        placeholder: \"Build Size\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }\n      }), \" Supported Filament\", /*#__PURE__*/React.createElement(MultiSelect, {\n        options: this.options(),\n        value: this.state.selectedFilaments,\n        onChange: e => this.setState({\n          printerModel: e.target.value\n        }),\n        labelledBy: 'Supported Filament',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }\n      })));\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n  } // Modal stuff\n\n\n  changeDimensions() {\n    if (this.state.modalData.xDim && this.state.modalData.yDim && this.state.modalData.zDim && this.state.modalData.selectedUnits) {\n      this.setState({\n        dimesions: this.state.xDim + this.state.selectedUnits + ' x ' + this.state.yDim + this.state.selectedUnits + ' x ' + this.state.zDim + this.state.selectedUnits\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Page, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      className: \"mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"ml-auto\",\n      lg: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"welcome-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 37\n      }\n    }, \"Sign Up\"), \" Unite3D\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"ml-auto mb-3 pr-5\",\n      lg: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(UTextInput, {\n      value: this.state.firstName,\n      onChange: e => {\n        this.setState({\n          firstName: e.target.value\n        });\n      },\n      onClick: () => {},\n      placeholder: \"First Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"ml-auto mb-3 pr-5\",\n      lg: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(UTextInput, {\n      value: this.state.lastName,\n      onChange: e => {\n        this.setState({\n          lastName: e.target.value\n        });\n      },\n      onClick: () => {},\n      placeholder: \"Last Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"ml-auto mb-3 pr-5\",\n      lg: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(UTextInput, {\n      value: this.state.email,\n      onChange: e => {\n        this.setState({\n          email: e.target.value\n        });\n      },\n      onClick: () => {},\n      placeholder: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"ml-auto mb-3 pr-5\",\n      lg: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(UTextInput, {\n      value: this.state.password,\n      password: true,\n      onChange: e => {\n        this.setState({\n          password: e.target.value\n        });\n      },\n      onClick: () => {},\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"ml-auto mb-3 pr-5\",\n      lg: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(UTextInput, {\n      value: this.state.confirmPassword,\n      password: true,\n      onChange: e => {\n        this.setState({\n          confirmPassword: e.target.value\n        });\n      },\n      onClick: () => {},\n      placeholder: \"Confirm Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"ml-auto mb-3 pr-5\",\n      lg: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"modeler-vendor-area mx-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"mx-0 my-3 width-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 45\n      }\n    }, \"What is your purpose in signing up? \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 45\n      }\n    }, \"Print my model \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 64\n      }\n    }, \"(Modeler)\"), ' ', /*#__PURE__*/React.createElement(\"input\", {\n      onChange: () => this.setState({\n        isVendor: false\n      }),\n      type: \"radio\",\n      name: \"purpose\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 45\n      }\n    }, \"Print other people's models \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 77\n      }\n    }, \"(Vendor)\"), ' ', /*#__PURE__*/React.createElement(\"input\", {\n      onChange: () => this.setState({\n        isVendor: true\n      }),\n      type: \"radio\",\n      name: \"purpose\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 49\n      }\n    })))), this.getPrinterRegistrationForm(), /*#__PURE__*/React.createElement(UDimensionsModal, {\n      xDim: this.state.modalData.xDim,\n      setXDim: e => this.setState({\n        xDim: e.target.value\n      }),\n      yDim: this.state.modalData.yDim,\n      setYDim: e => this.setState({\n        yDim: e.target.value\n      }),\n      zDim: this.state.modalData.zDim,\n      setZDim: e => this.setState({\n        zDim: e.target.value\n      }),\n      selectedUnits: this.state.modalData.selectedUnits,\n      setSelectedUnits: e => this.setState({\n        selectedUnits: e.target.value\n      }),\n      show: this.state.modalData.show,\n      handleClose: () => handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"ml-auto pr-5\",\n      lg: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"agree\",\n      type: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 33\n      }\n    }, \" Agree to\\xA0\", terms))), /*#__PURE__*/React.createElement(Row, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"ml-auto pr-5\",\n      lg: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(UButton, {\n      onClick: () => signUp(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 33\n      }\n    }, \"Sign Up\")))), /*#__PURE__*/React.createElement(Col, {\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ULogo, {\n      height: '400px',\n      color: \"purple\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/dillonharris/code/3DPrinterSharing-Web/src/components/CreateAccount.js"],"names":["React","axios","Row","Col","Page","ULogo","UTextInput","UButton","ULink","MultiSelect","config","UDimensionsModal","CreateAccount","Component","constructor","props","terms","signUp","method","url","data","email","state","password","first_name","firstName","last_name","lastName","isVendor","then","response","setState","token","registerPrinter","materials","handleShow","show","document","activeElement","blur","handleClose","changeDimensions","confirmPassword","selectedFilaments","printerMake","printerModel","dimensions","xDim","yDim","zDim","selectedUnits","userId","user","id","vendor","make","model","filaments","printDimensionX","printDimensionY","printDimensionZ","dimensionUnit","alert","catch","err","options","op","i","length","push","label","value","getPrinterRegistrationForm","e","target","taget","modalData","dimesions","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport Page from './utilities/Page';\nimport ULogo from './utilities/ULogo';\nimport UTextInput from './utilities/UTextInput';\nimport UButton from './utilities/UButton';\n\nimport './../style/LoginStyle.css';\nimport ULink from './utilities/ULink';\nimport MultiSelect from 'react-multi-select-component'; // https://www.npmjs.com/package/react-multi-select-component\n\nimport config from './../static/config';\nimport UDimensionsModal from './utilities/UDimensionsModal';\n\nexport default class CreateAccount extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            confirmPassword: '',\n            firstName: '',\n            lastName: '',\n            isVendor: false,\n            token: '',\n            selectedFilaments: [],\n            printerMake: '',\n            printerModel: '',\n\n            show: false,\n            dimensions: '',\n            xDim: '',\n            yDim: '',\n            zDim: '',\n            selectedUnits: '',\n        };\n        // this.setState({email: 'newemail'}, () => {})\n        //this.state.email\n    }\n\n    terms = (<ULink to='/terms-of-service'>Terms of Service</ULink>);\n\n    signUp = () => {\n        axios({\n            method: 'post',\n            url: 'http://localhost:8000/user/register',\n            data: {\n                email: this.state.email,\n                password: this.state.password,\n                first_name: this.state.firstName,\n                last_name: this.state.lastName,\n                isVendor: this.state.isVendor,\n            },\n        }).then((response) => {\n            this.setState({token: response.data.token}, () => {\n                if (this.state.isVendor) {\n                    this.registerPrinter();\n                }\n            });\n        });\n    };\n\n    registerPrinter() {\n        let userId = '';\n        axios({\n            method: 'post',\n            url: 'http://localhost:8000/user/verify',\n            data: {\n                token: this.state.token,\n            },\n        }).then((response) => {\n            userId = response.data.user.id;\n        });\n        if (userId) {\n            axios({\n                method: 'post',\n                url: 'http://localhost:8000/printer/register',\n                data: {\n                    vendor: userId,\n                    make: this.state.printerMake,\n                    model: this.state.printerModel,\n                    filaments: this.state.selectedFilaments,\n                    printDimensionX: this.state.xDim,\n                    printDimensionY: this.state.yDim,\n                    printDimensionZ: this.state.zDim,\n                    dimensionUnit: this.state.selectedUnits,\n                },\n            })\n                .then((response) => {\n                    alert('TODO: this endpoint has not been made/tested');\n                })\n                .catch((err) => {\n                    alert('TODO: this endpoint has not been made/tested');\n                });\n        }\n    }\n\n    materials = config.materials;\n    options() {\n        let op = [];\n        for (let i = 0; i < this.materials.length - 1; i++) {\n            op.push({label: this.materials[i], value: this.materials[i]});\n        }\n        return op;\n    }\n\n    getPrinterRegistrationForm() {\n        if (this.state.isVendor) {\n            return (\n                <Row width='100%' className='mx-0 mb-3 width-100'>\n                    <Col>\n                        <span className='register-printer-title'>Register Printer</span>\n                        <UTextInput\n                            value={this.state.printerMake}\n                            onChange={(e) => this.setState({printerMake: e.target.value})}\n                            onClick={() => {}}\n                            placeholder='Make'\n                        />\n                        <UTextInput\n                            value={this.state.printerModel}\n                            onChange={(e) => this.setState({printerModel: e.taget.value})}\n                            onClick={() => {}}\n                            placeholder='Model'\n                        />\n                        <UTextInput\n                            value={this.state.modalData.dimensions}\n                            onChange={() => {}}\n                            onClick={() => this.handleShow()}\n                            placeholder='Build Size'></UTextInput>\n                        <label /> Supported Filament\n                        <MultiSelect\n                            options={this.options()}\n                            value={this.state.selectedFilaments}\n                            onChange={(e) => this.setState({printerModel: e.target.value})}\n                            labelledBy={'Supported Filament'}\n                        />\n                    </Col>\n                </Row>\n            );\n        } else {\n            return <></>;\n        }\n    }\n\n    // Modal stuff\n\n    handleShow = () => {\n        this.setState({show: true});\n        document.activeElement.blur();\n    };\n    handleClose = () => {\n        this.setState({show: false});\n        this.changeDimensions();\n    };\n    changeDimensions() {\n        if (\n            this.state.modalData.xDim &&\n            this.state.modalData.yDim &&\n            this.state.modalData.zDim &&\n            this.state.modalData.selectedUnits\n        ) {\n            this.setState({\n                dimesions:\n                    this.state.xDim +\n                    this.state.selectedUnits +\n                    ' x ' +\n                    this.state.yDim +\n                    this.state.selectedUnits +\n                    ' x ' +\n                    this.state.zDim +\n                    this.state.selectedUnits,\n            });\n        }\n    }\n    render() {\n        return (\n            <Page>\n                <Row>\n                    <Col lg={6} className='mt-5'>\n                        <Row className='mb-3'>\n                            <Col className='ml-auto' lg={9}>\n                                <span className='welcome-title'>\n                                    <strong>Sign Up</strong> Unite3D\n                                </span>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className='ml-auto mb-3 pr-5' lg={9}>\n                                <UTextInput\n                                    value={this.state.firstName}\n                                    onChange={(e) => {\n                                        this.setState({firstName: e.target.value});\n                                    }}\n                                    onClick={() => {}}\n                                    placeholder='First Name'\n                                />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className='ml-auto mb-3 pr-5' lg={9}>\n                                <UTextInput\n                                    value={this.state.lastName}\n                                    onChange={(e) => {\n                                        this.setState({lastName: e.target.value});\n                                    }}\n                                    onClick={() => {}}\n                                    placeholder='Last Name'\n                                />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className='ml-auto mb-3 pr-5' lg={9}>\n                                <UTextInput\n                                    value={this.state.email}\n                                    onChange={(e) => {\n                                        this.setState({email: e.target.value});\n                                    }}\n                                    onClick={() => {}}\n                                    placeholder='Email'\n                                />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className='ml-auto mb-3 pr-5' lg={9}>\n                                <UTextInput\n                                    value={this.state.password}\n                                    password\n                                    onChange={(e) => {\n                                        this.setState({password: e.target.value});\n                                    }}\n                                    onClick={() => {}}\n                                    placeholder='Password'\n                                />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className='ml-auto mb-3 pr-5' lg={9}>\n                                <UTextInput\n                                    value={this.state.confirmPassword}\n                                    password\n                                    onChange={(e) => {\n                                        this.setState({confirmPassword: e.target.value});\n                                    }}\n                                    onClick={() => {}}\n                                    placeholder='Confirm Password'\n                                />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className='ml-auto mb-3 pr-5' lg={9}>\n                                <Row className='modeler-vendor-area mx-1'>\n                                    <Row className='mx-0 my-3 width-100'>\n                                        <Col className=''>\n                                            <span className=''>What is your purpose in signing up? </span>\n                                            <br />\n                                            <span>\n                                                Print my model <strong>(Modeler)</strong>{' '}\n                                                <input\n                                                    onChange={() => this.setState({isVendor: false})}\n                                                    type='radio'\n                                                    name='purpose'\n                                                />\n                                            </span>\n                                            <br />\n                                            <span>\n                                                Print other people's models <strong>(Vendor)</strong>{' '}\n                                                <input\n                                                    onChange={() => this.setState({isVendor: true})}\n                                                    type='radio'\n                                                    name='purpose'\n                                                />\n                                            </span>\n                                        </Col>\n                                    </Row>\n                                    {this.getPrinterRegistrationForm()}\n                                    <UDimensionsModal\n                                        xDim={this.state.modalData.xDim}\n                                        setXDim={(e) => this.setState({xDim: e.target.value})}\n                                        yDim={this.state.modalData.yDim}\n                                        setYDim={(e) => this.setState({yDim: e.target.value})}\n                                        zDim={this.state.modalData.zDim}\n                                        setZDim={(e) => this.setState({zDim: e.target.value})}\n                                        selectedUnits={this.state.modalData.selectedUnits}\n                                        setSelectedUnits={(e) => this.setState({selectedUnits: e.target.value})}\n                                        show={this.state.modalData.show}\n                                        handleClose={() => handleClose}\n                                    />\n                                </Row>\n                            </Col>\n                        </Row>\n                        <Row className='mb-3'>\n                            <Col className='ml-auto pr-5' lg={9}>\n                                <input name='agree' type='checkbox' />\n                                <span> Agree to&nbsp;{terms}</span>\n                            </Col>\n                        </Row>\n                        <Row className='mb-3'>\n                            <Col className='ml-auto pr-5' lg={9}>\n                                <UButton onClick={() => signUp()}>Sign Up</UButton>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col lg={4}>\n                        <ULogo height={'400px'} color='purple' />\n                    </Col>\n                </Row>\n            </Page>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}