{"ast":null,"code":"var _jsxFileName = \"/Users/dillonharris/code/3DPrinterSharing-Web/src/components/CreateJob.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport Toast from 'react-bootstrap/Toast';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Page from './utilities/Page';\nimport UTextInput from './utilities/UTextInput';\nimport USelectDropdown from './utilities/USelectDropdown';\nimport UButton from './utilities/UButton';\nimport UTextArea from './utilities/UTextArea';\nimport ImageUpload from './ImageUpload';\nimport './../style/CreateJobStyle.css';\nimport config from './../static/config';\nimport UDimensionsModal from './utilities/UDimensionsModal';\nexport default (() => {\n  const [images, setImages] = useState([]);\n  const [fill, setFill] = useState('');\n  const [filament, setFilament] = useState('');\n  const [modelName, setModelName] = useState('');\n  const [details, setDetails] = useState('');\n  const [streetAddress, setStreetAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [state, setState] = useState('');\n  const [zip, setZip] = useState('');\n  const [showToast, setShowToast] = useState(false);\n  const materials = config.materials;\n\n  let getImages = e => {\n    if (e) {\n      let list = [];\n      let files = e.target.files;\n\n      for (let i = 0; i < files.length; i++) {\n        let url = URL.createObjectURL(files[i]);\n        list.push(url);\n      }\n\n      setImages(list);\n\n      if (list.length > 5) {\n        setShowToast(true);\n      }\n    }\n  };\n\n  const createJob = () => {\n    let job = {\n      title: modelName,\n      filament: filament,\n      fill: fill,\n      printDimensionX: xDim,\n      printDimensionY: yDim,\n      printDimensionZ: zDim,\n      dimensionUnit: selectedUnits,\n      primaryImage: 'TODO: place primary image url here',\n      images: ['TODO: place image urls here'],\n      model: 'TODO: place model file url here',\n      details: details,\n      streetAddress: streetAddress,\n      city: city,\n      state: state,\n      zip: zip,\n      token: 'TODO: place token here'\n    };\n    console.log(job);\n    axios({\n      method: 'post',\n      url: 'http://localhost:8000/jobs/create',\n      data: job\n    }).then(response => {\n      console.log(response);\n    });\n  }; // Modal stuff\n\n\n  const [show, setShow] = useState(false);\n  const [dimensions, setDimensions] = useState('');\n  const [xDim, setXDim] = useState('');\n  const [yDim, setYDim] = useState('');\n  const [zDim, setZDim] = useState('');\n  const [selectedUnits, setSelectedUnits] = useState('');\n\n  const handleShow = () => {\n    setShow(true);\n    document.activeElement.blur();\n  };\n\n  const handleClose = () => {\n    setShow(false);\n    changeDimensions();\n  };\n\n  let changeDimensions = () => {\n    if (xDim && yDim && zDim && selectedUnits) {\n      setDimensions(xDim + selectedUnits + ' x ' + yDim + selectedUnits + ' x ' + zDim + selectedUnits);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Page, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toast-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Toast, {\n    show: showToast,\n    onClose: () => setShowToast(false),\n    className: \"toast\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Toast.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"mr-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, \"Alert!\")), /*#__PURE__*/React.createElement(Toast.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, \"Only five (5) images may be uploaded\"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"mx-auto\",\n    lg: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(UTextInput, {\n    value: modelName,\n    onChange: e => {\n      setModelName(e.target.value);\n    },\n    onClick: () => {},\n    placeholder: \"Model Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  }, \"3D Model File\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".DAE, .OBJ, .STL, .X3D, .X3DB, .X3DV, .WRL, .3MF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(USelectDropdown, {\n    value: filament,\n    onChange: e => {\n      setFilament(materials[e.target.value - 1]);\n    },\n    placeholder: \"Filament\",\n    options: materials,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 width-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(UTextInput, {\n    append: \"%\",\n    number: true,\n    value: fill,\n    onChange: e => {\n      setFill(e.target.value);\n    },\n    onClick: () => {},\n    placeholder: \"Fill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 width-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(UTextInput, {\n    value: dimensions,\n    onChange: () => {},\n    onClick: () => handleShow(),\n    placeholder: \"Dimensions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(UDimensionsModal, {\n    xDim: xDim,\n    setXDim: setXDim,\n    yDim: yDim,\n    setYDim: setYDim,\n    zDim: zDim,\n    setZDim: setZDim,\n    selectedUnits: selectedUnits,\n    setSelectedUnits: setSelectedUnits,\n    show: show,\n    handleClose: () => handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    className: \"shipping-details-area pt-3 px-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"mx-1 mb-3 width-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mb-1 ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 29\n    }\n  }, \"Shipping Details\"), /*#__PURE__*/React.createElement(UTextInput, {\n    value: streetAddress,\n    onChange: e => {\n      setStreetAddress(e.target.value);\n    },\n    onClick: () => {},\n    placeholder: \"Street Address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"ml-1 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(UTextInput, {\n    value: city,\n    onChange: e => {\n      setCity(e.target.value);\n    },\n    onClick: () => {},\n    placeholder: \"City\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(UTextInput, {\n    value: state,\n    onChange: e => {\n      setState(e.target.value);\n    },\n    onClick: () => {},\n    placeholder: \"State\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    className: \"mr-1 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(UTextInput, {\n    value: zip,\n    onChange: e => {\n      setZip(e.target.value);\n    },\n    onClick: () => {},\n    placeholder: \"Zip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 33\n    }\n  }, \"Images\")), /*#__PURE__*/React.createElement(\"input\", {\n    accept: \"image/*\",\n    htmlFor: \"image\",\n    type: \"file\",\n    multiple: true,\n    onChange: e => getImages(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(UTextArea, {\n    value: details,\n    onChange: e => {\n      setDetails(e.target.value);\n    },\n    placeholder: \"Details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(UButton, {\n    onClick: () => createJob(),\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 25\n    }\n  }, \"Create Model\"))), /*#__PURE__*/React.createElement(Col, {\n    className: \"mx-auto\",\n    lg: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ImageUpload, {\n    images: images,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 21\n    }\n  }))));\n});","map":{"version":3,"sources":["/Users/dillonharris/code/3DPrinterSharing-Web/src/components/CreateJob.js"],"names":["React","useState","axios","Toast","Row","Col","Page","UTextInput","USelectDropdown","UButton","UTextArea","ImageUpload","config","UDimensionsModal","images","setImages","fill","setFill","filament","setFilament","modelName","setModelName","details","setDetails","streetAddress","setStreetAddress","city","setCity","state","setState","zip","setZip","showToast","setShowToast","materials","getImages","e","list","files","target","i","length","url","URL","createObjectURL","push","createJob","job","title","printDimensionX","xDim","printDimensionY","yDim","printDimensionZ","zDim","dimensionUnit","selectedUnits","primaryImage","model","token","console","log","method","data","then","response","show","setShow","dimensions","setDimensions","setXDim","setYDim","setZDim","setSelectedUnits","handleShow","document","activeElement","blur","handleClose","changeDimensions","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useState} from 'react';\nimport axios from 'axios';\n\nimport Toast from 'react-bootstrap/Toast';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport Page from './utilities/Page';\nimport UTextInput from './utilities/UTextInput';\nimport USelectDropdown from './utilities/USelectDropdown';\nimport UButton from './utilities/UButton';\nimport UTextArea from './utilities/UTextArea';\n\nimport ImageUpload from './ImageUpload';\n\nimport './../style/CreateJobStyle.css';\nimport config from './../static/config';\nimport UDimensionsModal from './utilities/UDimensionsModal';\n\nexport default () => {\n    const [images, setImages] = useState([]);\n    const [fill, setFill] = useState('');\n    const [filament, setFilament] = useState('');\n    const [modelName, setModelName] = useState('');\n    const [details, setDetails] = useState('');\n    const [streetAddress, setStreetAddress] = useState('');\n    const [city, setCity] = useState('');\n    const [state, setState] = useState('');\n    const [zip, setZip] = useState('');\n\n    const [showToast, setShowToast] = useState(false);\n\n    const materials = config.materials;\n\n    let getImages = (e) => {\n        if (e) {\n            let list = [];\n            let files = e.target.files;\n            for (let i = 0; i < files.length; i++) {\n                let url = URL.createObjectURL(files[i]);\n                list.push(url);\n            }\n            setImages(list);\n            if (list.length > 5) {\n                setShowToast(true);\n            }\n        }\n    };\n\n    const createJob = () => {\n        let job = {\n            title: modelName,\n            filament: filament,\n            fill: fill,\n            printDimensionX: xDim,\n            printDimensionY: yDim,\n            printDimensionZ: zDim,\n            dimensionUnit: selectedUnits,\n            primaryImage: 'TODO: place primary image url here',\n            images: ['TODO: place image urls here'],\n            model: 'TODO: place model file url here',\n            details: details,\n            streetAddress: streetAddress,\n            city: city,\n            state: state,\n            zip: zip,\n            token: 'TODO: place token here',\n        };\n\n        console.log(job);\n\n        axios({\n            method: 'post',\n            url: 'http://localhost:8000/jobs/create',\n            data: job,\n        }).then((response) => {\n            console.log(response);\n        });\n    };\n\n    // Modal stuff\n    const [show, setShow] = useState(false);\n    const [dimensions, setDimensions] = useState('');\n    const [xDim, setXDim] = useState('');\n    const [yDim, setYDim] = useState('');\n    const [zDim, setZDim] = useState('');\n    const [selectedUnits, setSelectedUnits] = useState('');\n\n    const handleShow = () => {\n        setShow(true);\n        document.activeElement.blur();\n    };\n    const handleClose = () => {\n        setShow(false);\n        changeDimensions();\n    };\n    let changeDimensions = () => {\n        if (xDim && yDim && zDim && selectedUnits) {\n            setDimensions(xDim + selectedUnits + ' x ' + yDim + selectedUnits + ' x ' + zDim + selectedUnits);\n        }\n    };\n\n    return (\n        <Page>\n            <div className='toast-container'>\n                <Toast show={showToast} onClose={() => setShowToast(false)} className='toast'>\n                    <Toast.Header>\n                        <strong className='mr-auto'>Alert!</strong>\n                    </Toast.Header>\n                    <Toast.Body>Only five (5) images may be uploaded</Toast.Body>\n                </Toast>\n            </div>\n\n            <Row>\n                <Col className='mx-auto' lg={5}>\n                    <Row className='mb-3'>\n                        <UTextInput\n                            value={modelName}\n                            onChange={(e) => {\n                                setModelName(e.target.value);\n                            }}\n                            onClick={() => {}}\n                            placeholder='Model Name'></UTextInput>\n                    </Row>\n                    <Row>\n                        <div className='mb-3'>\n                            <div>\n                                <span>3D Model File</span>\n                            </div>\n                            <input type='file' accept='.DAE, .OBJ, .STL, .X3D, .X3DB, .X3DV, .WRL, .3MF' />\n                        </div>\n                    </Row>\n                    <Row>\n                        <USelectDropdown\n                            value={filament}\n                            onChange={(e) => {\n                                setFilament(materials[e.target.value - 1]);\n                            }}\n                            placeholder='Filament'\n                            options={materials}></USelectDropdown>\n                    </Row>\n                    <Row>\n                        <div className='mb-3 width-100'>\n                            <UTextInput\n                                append='%'\n                                number\n                                value={fill}\n                                onChange={(e) => {\n                                    setFill(e.target.value);\n                                }}\n                                onClick={() => {}}\n                                placeholder='Fill'></UTextInput>\n                        </div>\n                    </Row>\n                    <Row>\n                        <div className='mb-3 width-100'>\n                            <UTextInput\n                                value={dimensions}\n                                onChange={() => {}}\n                                onClick={() => handleShow()}\n                                placeholder='Dimensions'></UTextInput>\n                        </div>\n                        <UDimensionsModal\n                            xDim={xDim}\n                            setXDim={setXDim}\n                            yDim={yDim}\n                            setYDim={setYDim}\n                            zDim={zDim}\n                            setZDim={setZDim}\n                            selectedUnits={selectedUnits}\n                            setSelectedUnits={setSelectedUnits}\n                            show={show}\n                            handleClose={() => handleClose}\n                        />\n                    </Row>\n                    <Row className='shipping-details-area pt-3 px-3'>\n                        <Row className='mx-1 mb-3 width-100'>\n                            <span className='mb-1 ml-1'>Shipping Details</span>\n                            <UTextInput\n                                value={streetAddress}\n                                onChange={(e) => {\n                                    setStreetAddress(e.target.value);\n                                }}\n                                onClick={() => {}}\n                                placeholder='Street Address'></UTextInput>\n                        </Row>\n                        <Row>\n                            <Col className='ml-1 mb-3'>\n                                <UTextInput\n                                    value={city}\n                                    onChange={(e) => {\n                                        setCity(e.target.value);\n                                    }}\n                                    onClick={() => {}}\n                                    placeholder='City'></UTextInput>\n                            </Col>\n                            <Col className='mb-3'>\n                                <UTextInput\n                                    value={state}\n                                    onChange={(e) => {\n                                        setState(e.target.value);\n                                    }}\n                                    onClick={() => {}}\n                                    placeholder='State'></UTextInput>\n                            </Col>\n                            <Col className='mr-1 mb-3'>\n                                <UTextInput\n                                    value={zip}\n                                    onChange={(e) => {\n                                        setZip(e.target.value);\n                                    }}\n                                    onClick={() => {}}\n                                    placeholder='Zip'></UTextInput>\n                            </Col>\n                        </Row>\n                    </Row>\n                    <Row>\n                        <div className='mt-3'>\n                            <div>\n                                <span>Images</span>\n                            </div>\n                            <input\n                                accept='image/*'\n                                htmlFor='image'\n                                type='file'\n                                multiple\n                                onChange={(e) => getImages(e)}\n                            />\n                        </div>\n                    </Row>\n                    <Row className='mt-3'>\n                        <UTextArea\n                            value={details}\n                            onChange={(e) => {\n                                setDetails(e.target.value);\n                            }}\n                            placeholder='Details'></UTextArea>\n                    </Row>\n                    <Row>\n                        <UButton onClick={() => createJob()} size='lg'>\n                            Create Model\n                        </UButton>\n                    </Row>\n                </Col>\n\n                <Col className='mx-auto' lg={5}>\n                    <ImageUpload images={images} />\n                </Col>\n            </Row>\n        </Page>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}