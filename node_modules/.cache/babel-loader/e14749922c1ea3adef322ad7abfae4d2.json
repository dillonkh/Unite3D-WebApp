{"ast":null,"code":"var _jsxFileName = \"/Users/dillonharris/code/3DPrinterSharing-Web/src/components/CreateJob.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport Modal from 'react-bootstrap/Modal';\nimport Toast from 'react-bootstrap/Toast';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Page from './utilities/Page';\nimport UTextInput from './utilities/UTextInput';\nimport USelectDropdown from './utilities/USelectDropdown';\nimport UButton from './utilities/UButton';\nimport UTextArea from './utilities/UTextArea';\nimport ImageUpload from './ImageUpload';\nimport './../style/CreateJobStyle.css';\nexport default (() => {\n  const [images, setImages] = useState([]);\n  const [dimensions, setDimensions] = useState('');\n  const [xDim, setXDim] = useState('');\n  const [yDim, setYDim] = useState('');\n  const [zDim, setZDim] = useState('');\n  const [selectedUnits, setSelectedUnits] = useState('');\n  const [fill, setFill] = useState('');\n  const [filament, setFilament] = useState('');\n  const [modelName, setModelName] = useState('');\n  const [details, setDetails] = useState('');\n  const [streetAddress, setStreetAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [state, setState] = useState('');\n  const [zip, setZip] = useState('');\n  const [showToast, setShowToast] = useState(false);\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => {\n    setShow(false);\n    changeDimensions();\n  };\n\n  const handleShow = () => {\n    setShow(true); // document.activeElement.blur();\n  };\n\n  const units = ['in', 'mm'];\n  const materials = ['Polyamide (SLS)', 'Polyamide (MJF)', 'Polyamide Priority (SLS)', 'Alumide', 'Polypropylene', 'Rubber Like (MJF)', 'Steel', 'High-Detail Stainless Steel', 'Multicolor+', 'Standard Resin', 'Gray Resin', 'Mammoth Resin', 'Transparent Resin', 'Silver', 'Gold', 'Brass', 'Bronze', 'Copper', 'Titanium', 'Aluminum', 'ABS', 'High-Detail Resin'];\n\n  let changeSelectedUnits = e => {\n    setSelectedUnits(units[e.target.value - 1]);\n  };\n\n  let changeDimensions = () => {\n    if (xDim && yDim && zDim && selectedUnits) {\n      setDimensions(xDim + selectedUnits + ' x ' + yDim + selectedUnits + ' x ' + zDim + selectedUnits);\n    }\n  };\n\n  let getImages = e => {\n    if (e) {\n      let list = [];\n      let files = e.target.files;\n\n      for (let i = 0; i < files.length; i++) {\n        let url = URL.createObjectURL(files[i]);\n        list.push(url);\n      }\n\n      setImages(list);\n\n      if (list.length > 5) {\n        setShowToast(true);\n      }\n    }\n  };\n\n  const createJob = () => {\n    let job = {\n      title: modelName,\n      filament: filament,\n      fill: fill,\n      printDimensionX: xDim,\n      printDimensionY: yDim,\n      printDimensionZ: zDim,\n      dimensionUnit: selectedUnits,\n      primaryImage: 'TODO: place primary image url here',\n      images: ['TODO: place image urls here'],\n      model: 'TODO: place model file url here',\n      details: details,\n      streetAddress: streetAddress,\n      city: city,\n      state: state,\n      zip: zip,\n      token: 'TODO: place token here'\n    };\n    console.log(job);\n    axios({\n      method: 'post',\n      url: 'http://localhost:8000/jobs/create',\n      data: job\n    }).then(response => {\n      console.log(response);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Page, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toast-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Toast, {\n    show: showToast,\n    onClose: () => setShowToast(false),\n    className: \"toast\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Toast.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"mr-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, \"Alert!\")), /*#__PURE__*/React.createElement(Toast.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, \"Only five (5) images may be uploaded\"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"mx-auto\",\n    lg: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(UTextInput, {\n    value: modelName,\n    onChange: e => {\n      setModelName(e.target.value);\n    },\n    onClick: () => {},\n    placeholder: \"Model Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 33\n    }\n  }, \"3D Model File\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".DAE, .OBJ, .STL, .X3D, .X3DB, .X3DV, .WRL, .3MF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(USelectDropdown, {\n    value: filament,\n    onChange: e => {\n      setFilament(materials[e.target.value - 1]);\n    },\n    placeholder: \"Filament\",\n    options: materials,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 width-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(UTextInput, {\n    append: \"%\",\n    number: true,\n    value: fill,\n    onChange: e => {\n      setFill(e.target.value);\n    },\n    onClick: () => {},\n    placeholder: \"Fill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 width-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(UTextInput, {\n    value: dimensions,\n    onChange: () => {},\n    onClick: handleShow,\n    placeholder: \"Dimensions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 33\n    }\n  }, \"Dimensions\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"mx-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(UTextInput, {\n    number: true,\n    placeholder: \"1.5\",\n    className: \"my-0\",\n    value: xDim,\n    onChange: e => {\n      setXDim(e.target.value);\n    },\n    onClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sub-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 49\n    }\n  }, \"x-axis\")))), /*#__PURE__*/React.createElement(Col, {\n    className: \"px-0 vertical-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"horizontal-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 41\n    }\n  }, \"X\")), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(UTextInput, {\n    number: true,\n    placeholder: \"2.0\",\n    value: yDim,\n    onChange: e => {\n      setYDim(e.target.value);\n    },\n    onClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    className: \"sub-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sub-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 49\n    }\n  }, \"y-axis\")))), /*#__PURE__*/React.createElement(Col, {\n    className: \"px-0 vertical-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"horizontal-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 41\n    }\n  }, \"X\")), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(UTextInput, {\n    number: true,\n    placeholder: \"2.5\",\n    value: zDim,\n    onChange: e => {\n      setZDim(e.target.value);\n    },\n    onClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    className: \"sub-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sub-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 49\n    }\n  }, \"z-axis\")))), /*#__PURE__*/React.createElement(Col, {\n    lg: '3',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(USelectDropdown, {\n    onChange: e => changeSelectedUnits(e),\n    value: selectedUnits,\n    placeholder: \"Units\",\n    options: units,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(UButton, {\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 33\n    }\n  }, \"Set Dimensions\")))), /*#__PURE__*/React.createElement(Row, {\n    className: \"shipping-details-area pt-3 px-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"mx-1 mb-3 width-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mb-1 ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 29\n    }\n  }, \"Shipping Details\"), /*#__PURE__*/React.createElement(UTextInput, {\n    value: streetAddress,\n    onChange: e => {\n      setStreetAddress(e.target.value);\n    },\n    onClick: () => {},\n    placeholder: \"Street Address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"ml-1 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(UTextInput, {\n    value: city,\n    onChange: e => {\n      setCity(e.target.value);\n    },\n    onClick: () => {},\n    placeholder: \"City\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(UTextInput, {\n    value: state,\n    onChange: e => {\n      setState(e.target.value);\n    },\n    onClick: () => {},\n    placeholder: \"State\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    className: \"mr-1 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(UTextInput, {\n    value: zip,\n    onChange: e => {\n      setZip(e.target.value);\n    },\n    onClick: () => {},\n    placeholder: \"Zip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 33\n    }\n  }, \"Images\")), /*#__PURE__*/React.createElement(\"input\", {\n    accept: \"image/*\",\n    htmlFor: \"image\",\n    type: \"file\",\n    multiple: true,\n    onChange: e => getImages(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(UTextArea, {\n    value: details,\n    onChange: e => {\n      setDetails(e.target.value);\n    },\n    placeholder: \"Details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(UButton, {\n    onClick: () => createJob(),\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 25\n    }\n  }, \"Create Model\"))), /*#__PURE__*/React.createElement(Col, {\n    className: \"mx-auto\",\n    lg: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ImageUpload, {\n    images: images,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 21\n    }\n  }))));\n});","map":{"version":3,"sources":["/Users/dillonharris/code/3DPrinterSharing-Web/src/components/CreateJob.js"],"names":["React","useState","axios","Modal","Toast","Row","Col","Page","UTextInput","USelectDropdown","UButton","UTextArea","ImageUpload","images","setImages","dimensions","setDimensions","xDim","setXDim","yDim","setYDim","zDim","setZDim","selectedUnits","setSelectedUnits","fill","setFill","filament","setFilament","modelName","setModelName","details","setDetails","streetAddress","setStreetAddress","city","setCity","state","setState","zip","setZip","showToast","setShowToast","show","setShow","handleClose","changeDimensions","handleShow","units","materials","changeSelectedUnits","e","target","value","getImages","list","files","i","length","url","URL","createObjectURL","push","createJob","job","title","printDimensionX","printDimensionY","printDimensionZ","dimensionUnit","primaryImage","model","token","console","log","method","data","then","response"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useState} from 'react';\nimport axios from 'axios';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Toast from 'react-bootstrap/Toast';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport Page from './utilities/Page';\nimport UTextInput from './utilities/UTextInput';\nimport USelectDropdown from './utilities/USelectDropdown';\nimport UButton from './utilities/UButton';\nimport UTextArea from './utilities/UTextArea';\n\nimport ImageUpload from './ImageUpload';\n\nimport './../style/CreateJobStyle.css';\n\nexport default () => {\n    const [images, setImages] = useState([]);\n    const [dimensions, setDimensions] = useState('');\n    const [xDim, setXDim] = useState('');\n    const [yDim, setYDim] = useState('');\n    const [zDim, setZDim] = useState('');\n    const [selectedUnits, setSelectedUnits] = useState('');\n    const [fill, setFill] = useState('');\n    const [filament, setFilament] = useState('');\n    const [modelName, setModelName] = useState('');\n    const [details, setDetails] = useState('');\n    const [streetAddress, setStreetAddress] = useState('');\n    const [city, setCity] = useState('');\n    const [state, setState] = useState('');\n    const [zip, setZip] = useState('');\n\n    const [showToast, setShowToast] = useState(false);\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => {\n        setShow(false);\n        changeDimensions();\n    };\n    const handleShow = () => {\n        setShow(true);\n        // document.activeElement.blur();\n    };\n\n    const units = ['in', 'mm'];\n    const materials = [\n        'Polyamide (SLS)',\n        'Polyamide (MJF)',\n        'Polyamide Priority (SLS)',\n        'Alumide',\n        'Polypropylene',\n        'Rubber Like (MJF)',\n        'Steel',\n        'High-Detail Stainless Steel',\n        'Multicolor+',\n        'Standard Resin',\n        'Gray Resin',\n        'Mammoth Resin',\n        'Transparent Resin',\n        'Silver',\n        'Gold',\n        'Brass',\n        'Bronze',\n        'Copper',\n        'Titanium',\n        'Aluminum',\n        'ABS',\n        'High-Detail Resin',\n    ];\n\n    let changeSelectedUnits = (e) => {\n        setSelectedUnits(units[e.target.value - 1]);\n    };\n\n    let changeDimensions = () => {\n        if (xDim && yDim && zDim && selectedUnits) {\n            setDimensions(xDim + selectedUnits + ' x ' + yDim + selectedUnits + ' x ' + zDim + selectedUnits);\n        }\n    };\n\n    let getImages = (e) => {\n        if (e) {\n            let list = [];\n            let files = e.target.files;\n            for (let i = 0; i < files.length; i++) {\n                let url = URL.createObjectURL(files[i]);\n                list.push(url);\n            }\n            setImages(list);\n            if (list.length > 5) {\n                setShowToast(true);\n            }\n        }\n    };\n\n    const createJob = () => {\n        let job = {\n            title: modelName,\n            filament: filament,\n            fill: fill,\n            printDimensionX: xDim,\n            printDimensionY: yDim,\n            printDimensionZ: zDim,\n            dimensionUnit: selectedUnits,\n            primaryImage: 'TODO: place primary image url here',\n            images: ['TODO: place image urls here'],\n            model: 'TODO: place model file url here',\n            details: details,\n            streetAddress: streetAddress,\n            city: city,\n            state: state,\n            zip: zip,\n            token: 'TODO: place token here',\n        };\n\n        console.log(job);\n\n        axios({\n            method: 'post',\n            url: 'http://localhost:8000/jobs/create',\n            data: job,\n        }).then((response) => {\n            console.log(response);\n        });\n    };\n\n    return (\n        <Page>\n            <div className='toast-container'>\n                <Toast show={showToast} onClose={() => setShowToast(false)} className='toast'>\n                    <Toast.Header>\n                        <strong className='mr-auto'>Alert!</strong>\n                    </Toast.Header>\n                    <Toast.Body>Only five (5) images may be uploaded</Toast.Body>\n                </Toast>\n            </div>\n\n            <Row>\n                <Col className='mx-auto' lg={5}>\n                    <Row className='mb-3'>\n                        <UTextInput\n                            value={modelName}\n                            onChange={(e) => {\n                                setModelName(e.target.value);\n                            }}\n                            onClick={() => {}}\n                            placeholder='Model Name'></UTextInput>\n                    </Row>\n                    <Row>\n                        <div className='mb-3'>\n                            <div>\n                                <span>3D Model File</span>\n                            </div>\n                            <input type='file' accept='.DAE, .OBJ, .STL, .X3D, .X3DB, .X3DV, .WRL, .3MF' />\n                        </div>\n                    </Row>\n                    <Row>\n                        <USelectDropdown\n                            value={filament}\n                            onChange={(e) => {\n                                setFilament(materials[e.target.value - 1]);\n                            }}\n                            placeholder='Filament'\n                            options={materials}></USelectDropdown>\n                    </Row>\n                    <Row>\n                        <div className='mb-3 width-100'>\n                            <UTextInput\n                                append='%'\n                                number\n                                value={fill}\n                                onChange={(e) => {\n                                    setFill(e.target.value);\n                                }}\n                                onClick={() => {}}\n                                placeholder='Fill'></UTextInput>\n                        </div>\n                    </Row>\n                    <Row>\n                        <div className='mb-3 width-100'>\n                            <UTextInput\n                                value={dimensions}\n                                onChange={() => {}}\n                                onClick={handleShow}\n                                placeholder='Dimensions'></UTextInput>\n                        </div>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Dimensions</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                                <Row className='mx-1'>\n                                    <Col>\n                                        <Row>\n                                            <UTextInput\n                                                number\n                                                placeholder='1.5'\n                                                className='my-0'\n                                                value={xDim}\n                                                onChange={(e) => {\n                                                    setXDim(e.target.value);\n                                                }}\n                                                onClick={() => {}}\n                                            />\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <span className='sub-label'>x-axis</span>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col className='px-0 vertical-center'>\n                                        <span className='horizontal-center'>X</span>\n                                    </Col>\n                                    <Col>\n                                        <Row>\n                                            <UTextInput\n                                                number\n                                                placeholder='2.0'\n                                                value={yDim}\n                                                onChange={(e) => {\n                                                    setYDim(e.target.value);\n                                                }}\n                                                onClick={() => {}}\n                                            />\n                                        </Row>\n                                        <Row className='sub-label'>\n                                            <Col>\n                                                <span className='sub-label'>y-axis</span>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col className='px-0 vertical-center'>\n                                        <span className='horizontal-center'>X</span>\n                                    </Col>\n                                    <Col>\n                                        <Row>\n                                            <UTextInput\n                                                number\n                                                placeholder='2.5'\n                                                value={zDim}\n                                                onChange={(e) => {\n                                                    setZDim(e.target.value);\n                                                }}\n                                                onClick={() => {}}\n                                            />\n                                        </Row>\n                                        <Row className='sub-label'>\n                                            <Col>\n                                                <span className='sub-label'>z-axis</span>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col lg={'3'}>\n                                        <USelectDropdown\n                                            onChange={(e) => changeSelectedUnits(e)}\n                                            value={selectedUnits}\n                                            placeholder='Units'\n                                            options={units}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <UButton onClick={handleClose}>Set Dimensions</UButton>\n                            </Modal.Footer>\n                        </Modal>\n                    </Row>\n                    <Row className='shipping-details-area pt-3 px-3'>\n                        <Row className='mx-1 mb-3 width-100'>\n                            <span className='mb-1 ml-1'>Shipping Details</span>\n                            <UTextInput\n                                value={streetAddress}\n                                onChange={(e) => {\n                                    setStreetAddress(e.target.value);\n                                }}\n                                onClick={() => {}}\n                                placeholder='Street Address'></UTextInput>\n                        </Row>\n                        <Row>\n                            <Col className='ml-1 mb-3'>\n                                <UTextInput\n                                    value={city}\n                                    onChange={(e) => {\n                                        setCity(e.target.value);\n                                    }}\n                                    onClick={() => {}}\n                                    placeholder='City'></UTextInput>\n                            </Col>\n                            <Col className='mb-3'>\n                                <UTextInput\n                                    value={state}\n                                    onChange={(e) => {\n                                        setState(e.target.value);\n                                    }}\n                                    onClick={() => {}}\n                                    placeholder='State'></UTextInput>\n                            </Col>\n                            <Col className='mr-1 mb-3'>\n                                <UTextInput\n                                    value={zip}\n                                    onChange={(e) => {\n                                        setZip(e.target.value);\n                                    }}\n                                    onClick={() => {}}\n                                    placeholder='Zip'></UTextInput>\n                            </Col>\n                        </Row>\n                    </Row>\n                    <Row>\n                        <div className='mt-3'>\n                            <div>\n                                <span>Images</span>\n                            </div>\n                            <input\n                                accept='image/*'\n                                htmlFor='image'\n                                type='file'\n                                multiple\n                                onChange={(e) => getImages(e)}\n                            />\n                        </div>\n                    </Row>\n                    <Row className='mt-3'>\n                        <UTextArea\n                            value={details}\n                            onChange={(e) => {\n                                setDetails(e.target.value);\n                            }}\n                            placeholder='Details'></UTextArea>\n                    </Row>\n                    <Row>\n                        <UButton onClick={() => createJob()} size='lg'>\n                            Create Model\n                        </UButton>\n                    </Row>\n                </Col>\n\n                <Col className='mx-auto' lg={5}>\n                    <ImageUpload images={images} />\n                </Col>\n            </Row>\n        </Page>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}